

hASList: 
[UPD ReturnStatement@@InfixExpression:invocation.getMethod().getName() + "()" @TO@ InfixExpression:invocation.getMethod().getName() + "(" + args.substring(1,args.length() - 1)+ ")" @AT@ 2441 @LENGTH@ 47
---UPD InfixExpression@@invocation.getMethod().getName() + "()" @TO@ invocation.getMethod().getName() + "(" + args.substring(1,args.length() - 1)+ ")" @AT@ 2448 @LENGTH@ 39
------UPD StringLiteral@@"()" @TO@ "(" @AT@ 2483 @LENGTH@ 4
------INS MethodInvocation@@args.substring(1,args.length() - 1) @TO@ InfixExpression@@invocation.getMethod().getName() + "()" @AT@ 2577 @LENGTH@ 36
---------INS SimpleName@@Name:args @TO@ MethodInvocation@@args.substring(1,args.length() - 1) @AT@ 2577 @LENGTH@ 4
---------INS SimpleName@@MethodName:substring:[1, args.length() - 1] @TO@ MethodInvocation@@args.substring(1,args.length() - 1) @AT@ 2582 @LENGTH@ 31
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1, args.length() - 1] @AT@ 2592 @LENGTH@ 1
------------INS InfixExpression@@args.length() - 1 @TO@ SimpleName@@MethodName:substring:[1, args.length() - 1] @AT@ 2595 @LENGTH@ 17
---------------INS MethodInvocation@@args.length() @TO@ InfixExpression@@args.length() - 1 @AT@ 2595 @LENGTH@ 13
------------------INS SimpleName@@Name:args @TO@ MethodInvocation@@args.length() @AT@ 2595 @LENGTH@ 4
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@args.length() @AT@ 2600 @LENGTH@ 8
---------------INS Operator@@- @TO@ InfixExpression@@args.length() - 1 @AT@ 2608 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@args.length() - 1 @AT@ 2611 @LENGTH@ 1
------INS StringLiteral@@")" @TO@ InfixExpression@@invocation.getMethod().getName() + "()" @AT@ 2616 @LENGTH@ 3
, INS VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @TO@ MethodDeclaration@@private, @@String, MethodName:formatMethodCall, @@Argus:null @AT@ 2467 @LENGTH@ 57
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @AT@ 2467 @LENGTH@ 6
---INS VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @TO@ VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @AT@ 2474 @LENGTH@ 49
------INS SimpleName@@args @TO@ VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @AT@ 2474 @LENGTH@ 4
------INS MethodInvocation@@Arrays.toString(invocation.getArguments()) @TO@ VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @AT@ 2481 @LENGTH@ 42
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(invocation.getArguments()) @AT@ 2481 @LENGTH@ 6
---------INS SimpleName@@MethodName:toString:[invocation.getArguments()] @TO@ MethodInvocation@@Arrays.toString(invocation.getArguments()) @AT@ 2488 @LENGTH@ 35
------------INS MethodInvocation@@invocation.getArguments() @TO@ SimpleName@@MethodName:toString:[invocation.getArguments()] @AT@ 2497 @LENGTH@ 25
---------------INS SimpleName@@Name:invocation @TO@ MethodInvocation@@invocation.getArguments() @AT@ 2497 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getArguments:[] @TO@ MethodInvocation@@invocation.getArguments() @AT@ 2508 @LENGTH@ 14
]

CII:
OP1:(UPD, ReturnStatement, null, OP2)
OP2:   (UPD, InfixExpression, OP1, OP3 OP4 OP14)
OP3:      (UPD, StringLiteral, OP2, null)
OP4:      (INS, MethodInvocation, OP2, OP5 OP6)
OP5:         (INS, SimpleName, OP4, null)
OP6:         (INS, SimpleName, OP4, OP7 OP8)
OP7:            (INS, NumberLiteral, OP6, null)
OP8:            (INS, InfixExpression, OP6, OP9 OP12 OP13)
OP9:               (INS, MethodInvocation, OP8, OP10 OP11)
OP10:                  (INS, SimpleName, OP9, null)
OP11:                  (INS, SimpleName, OP9, null)
OP12:               (INS, Operator, OP8, null)
OP13:               (INS, NumberLiteral, OP8, null)
OP14:      (INS, StringLiteral, OP2, null)





hASList: 
[UPD ReturnStatement@@InfixExpression:invocation.getMethod().getName() + "()" @TO@ InfixExpression:invocation.getMethod().getName() + "(" + args.substring(1,args.length() - 1)+ ")" @AT@ 2441 @LENGTH@ 47
---UPD InfixExpression@@invocation.getMethod().getName() + "()" @TO@ invocation.getMethod().getName() + "(" + args.substring(1,args.length() - 1)+ ")" @AT@ 2448 @LENGTH@ 39
------UPD StringLiteral@@"()" @TO@ "(" @AT@ 2483 @LENGTH@ 4
------INS MethodInvocation@@args.substring(1,args.length() - 1) @TO@ InfixExpression@@invocation.getMethod().getName() + "()" @AT@ 2577 @LENGTH@ 36
---------INS SimpleName@@Name:args @TO@ MethodInvocation@@args.substring(1,args.length() - 1) @AT@ 2577 @LENGTH@ 4
---------INS SimpleName@@MethodName:substring:[1, args.length() - 1] @TO@ MethodInvocation@@args.substring(1,args.length() - 1) @AT@ 2582 @LENGTH@ 31
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:substring:[1, args.length() - 1] @AT@ 2592 @LENGTH@ 1
------------INS InfixExpression@@args.length() - 1 @TO@ SimpleName@@MethodName:substring:[1, args.length() - 1] @AT@ 2595 @LENGTH@ 17
---------------INS MethodInvocation@@args.length() @TO@ InfixExpression@@args.length() - 1 @AT@ 2595 @LENGTH@ 13
------------------INS SimpleName@@Name:args @TO@ MethodInvocation@@args.length() @AT@ 2595 @LENGTH@ 4
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@args.length() @AT@ 2600 @LENGTH@ 8
---------------INS Operator@@- @TO@ InfixExpression@@args.length() - 1 @AT@ 2608 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@args.length() - 1 @AT@ 2611 @LENGTH@ 1
------INS StringLiteral@@")" @TO@ InfixExpression@@invocation.getMethod().getName() + "()" @AT@ 2616 @LENGTH@ 3
, INS VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @TO@ MethodDeclaration@@private, @@String, MethodName:formatMethodCall, @@Argus:null @AT@ 2467 @LENGTH@ 57
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @AT@ 2467 @LENGTH@ 6
---INS VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @TO@ VariableDeclarationStatement@@String args=Arrays.toString(invocation.getArguments()); @AT@ 2474 @LENGTH@ 49
------INS SimpleName@@args @TO@ VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @AT@ 2474 @LENGTH@ 4
------INS MethodInvocation@@Arrays.toString(invocation.getArguments()) @TO@ VariableDeclarationFragment@@args=Arrays.toString(invocation.getArguments()) @AT@ 2481 @LENGTH@ 42
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.toString(invocation.getArguments()) @AT@ 2481 @LENGTH@ 6
---------INS SimpleName@@MethodName:toString:[invocation.getArguments()] @TO@ MethodInvocation@@Arrays.toString(invocation.getArguments()) @AT@ 2488 @LENGTH@ 35
------------INS MethodInvocation@@invocation.getArguments() @TO@ SimpleName@@MethodName:toString:[invocation.getArguments()] @AT@ 2497 @LENGTH@ 25
---------------INS SimpleName@@Name:invocation @TO@ MethodInvocation@@invocation.getArguments() @AT@ 2497 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getArguments:[] @TO@ MethodInvocation@@invocation.getArguments() @AT@ 2508 @LENGTH@ 14
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3)
OP2:   (INS, SimpleType, OP1, null)
OP3:   (INS, VariableDeclarationFragment, OP1, OP4 OP5)
OP4:      (INS, SimpleName, OP3, null)
OP5:      (INS, MethodInvocation, OP3, OP6 OP7)
OP6:         (INS, SimpleName, OP5, null)
OP7:         (INS, SimpleName, OP5, OP8)
OP8:            (INS, MethodInvocation, OP7, OP9 OP10)
OP9:               (INS, SimpleName, OP8, null)
OP10:               (INS, SimpleName, OP8, null)



