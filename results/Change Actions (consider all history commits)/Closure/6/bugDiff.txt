
diff -Naur ../d4j-repo/Closure/Closure_6/src/com/google/javascript/jscomp/TypeValidator.java ../d4j-repo/fixed_bugs_dir/Closure/Closure_6/src/com/google/javascript/jscomp/TypeValidator.java
--- ../d4j-repo/Closure/Closure_6/src/com/google/javascript/jscomp/TypeValidator.java	2021-01-06 03:40:13.260764605 -0800
+++ ../d4j-repo/fixed_bugs_dir/Closure/Closure_6/src/com/google/javascript/jscomp/TypeValidator.java	2021-01-06 03:40:16.204864858 -0800
@@ -363,9 +363,6 @@
       JSType leftType, Node owner, String propName) {
     // The NoType check is a hack to make typedefs work OK.
     if (!leftType.isNoType() && !rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       // Do not type-check interface methods, because we expect that
       // they will have dummy implementations that do not match the type
       // annotations.
@@ -382,7 +379,6 @@
           "assignment to property " + propName + " of " +
           getReadableJSTypeName(owner, true),
           rightType, leftType);
-      }
       return false;
     }
     return true;
@@ -402,11 +398,7 @@
   boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType,
       JSType leftType, String msg) {
     if (!rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       mismatch(t, n, msg, rightType, leftType);
-      }
       return false;
     }
     return true;