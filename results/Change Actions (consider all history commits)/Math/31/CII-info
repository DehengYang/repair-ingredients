

hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, VariableDeclarationStatement, null, OP2 OP3)
OP2:   (DEL, PrimitiveType, OP1, null)
OP3:   (DEL, VariableDeclarationFragment, OP1, OP4 OP5)
OP4:      (DEL, SimpleName, OP3, null)
OP5:      (DEL, NumberLiteral, OP3, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, VariableDeclarationStatement, null, OP2 OP3)
OP2:   (DEL, PrimitiveType, OP1, null)
OP3:   (DEL, VariableDeclarationFragment, OP1, OP4 OP5)
OP4:      (DEL, SimpleName, OP3, null)
OP5:      (DEL, NumberLiteral, OP3, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(INS, IfStatement, null, OP2 OP5)
OP2:   (INS, MethodInvocation, OP1, OP3 OP4)
OP3:      (MOV, SimpleName, OP2, null)
OP4:      (MOV, SimpleName, OP2, null)
OP5:   (INS, ExpressionStatement, OP1, OP6)
OP6:      (MOV, Assignment, OP5, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, VariableDeclarationStatement, null, OP2 OP3)
OP2:   (DEL, PrimitiveType, OP1, null)
OP3:   (DEL, VariableDeclarationFragment, OP1, OP4 OP5)
OP4:      (DEL, SimpleName, OP3, null)
OP5:      (DEL, InfixExpression, OP3, OP6 OP10 OP11)
OP6:         (DEL, InfixExpression, OP5, OP7 OP8 OP9)
OP7:            (DEL, SimpleName, OP6, null)
OP8:            (DEL, Operator, OP6, null)
OP9:            (DEL, SimpleName, OP6, null)
OP10:         (DEL, Operator, OP5, null)
OP11:         (DEL, InfixExpression, OP5, OP12 OP13 OP14)
OP12:            (DEL, SimpleName, OP11, null)
OP13:            (DEL, Operator, OP11, null)
OP14:            (DEL, SimpleName, OP11, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, VariableDeclarationStatement, null, OP2)
OP2:   (UPD, VariableDeclarationFragment, OP1, OP3 OP4)
OP3:      (UPD, SimpleName, OP2, null)
OP4:      (UPD, InfixExpression, OP2, OP5 OP6)
OP5:         (MOV, SimpleName, OP4, null)
OP6:         (DEL, InfixExpression, OP4, OP7 OP8)
OP7:            (DEL, Operator, OP6, null)
OP8:            (DEL, SimpleName, OP6, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3)
OP2:   (INS, PrimitiveType, OP1, null)
OP3:   (INS, VariableDeclarationFragment, OP1, OP4 OP5)
OP4:      (INS, SimpleName, OP3, null)
OP5:      (INS, InfixExpression, OP3, OP6 OP7 OP8)
OP6:         (MOV, SimpleName, OP5, null)
OP7:         (MOV, Operator, OP5, null)
OP8:         (MOV, InfixExpression, OP5, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, IfStatement, null, OP2 OP12 OP17 OP22 OP28 OP34 OP47)
OP2:   (DEL, InfixExpression, OP1, OP3 OP7 OP8)
OP3:      (DEL, MethodInvocation, OP2, OP4 OP5)
OP4:         (DEL, SimpleName, OP3, null)
OP5:         (DEL, SimpleName, OP3, OP6)
OP6:            (DEL, SimpleName, OP5, null)
OP7:      (DEL, Operator, OP2, null)
OP8:      (DEL, MethodInvocation, OP2, OP9 OP10)
OP9:         (DEL, SimpleName, OP8, null)
OP10:         (DEL, SimpleName, OP8, OP11)
OP11:            (DEL, SimpleName, OP10, null)
OP12:   (DEL, VariableDeclarationStatement, OP1, OP13 OP14)
OP13:      (DEL, PrimitiveType, OP12, null)
OP14:      (DEL, VariableDeclarationFragment, OP12, OP15 OP16)
OP15:         (DEL, SimpleName, OP14, null)
OP16:         (DEL, NumberLiteral, OP14, null)
OP17:   (DEL, VariableDeclarationStatement, OP1, OP18 OP19)
OP18:      (DEL, PrimitiveType, OP17, null)
OP19:      (DEL, VariableDeclarationFragment, OP17, OP20 OP21)
OP20:         (DEL, SimpleName, OP19, null)
OP21:         (DEL, NumberLiteral, OP19, null)
OP22:   (DEL, VariableDeclarationStatement, OP1, OP23 OP24 OP25)
OP23:      (DEL, Modifier, OP22, null)
OP24:      (DEL, PrimitiveType, OP22, null)
OP25:      (DEL, VariableDeclarationFragment, OP22, OP26 OP27)
OP26:         (DEL, SimpleName, OP25, null)
OP27:         (DEL, NumberLiteral, OP25, null)
OP28:   (DEL, VariableDeclarationStatement, OP1, OP29 OP30 OP31)
OP29:      (DEL, Modifier, OP28, null)
OP30:      (DEL, PrimitiveType, OP28, null)
OP31:      (DEL, VariableDeclarationFragment, OP28, OP32 OP33)
OP32:         (DEL, SimpleName, OP31, null)
OP33:         (DEL, MethodInvocation, OP31, null)
OP34:   (DEL, IfStatement, OP1, OP35 OP39)
OP35:      (DEL, InfixExpression, OP34, OP36 OP37 OP38)
OP36:         (DEL, SimpleName, OP35, null)
OP37:         (DEL, Operator, OP35, null)
OP38:         (DEL, NumberLiteral, OP35, null)
OP39:      (DEL, ThrowStatement, OP34, OP40)
OP40:         (DEL, ClassInstanceCreation, OP39, OP41 OP42 OP43 OP46)
OP41:            (DEL, New, OP40, null)
OP42:            (DEL, SimpleType, OP40, null)
OP43:            (DEL, QualifiedName, OP40, OP44 OP45)
OP44:               (DEL, SimpleName, OP43, null)
OP45:               (DEL, SimpleName, OP43, null)
OP46:            (DEL, SimpleName, OP40, null)
OP47:   (DEL, ForStatement, OP1, OP48 OP53 OP57 OP60 OP61 OP66 OP113)
OP48:      (DEL, VariableDeclarationExpression, OP47, OP49 OP50)
OP49:         (DEL, PrimitiveType, OP48, null)
OP50:         (DEL, VariableDeclarationFragment, OP48, OP51 OP52)
OP51:            (DEL, SimpleName, OP50, null)
OP52:            (DEL, NumberLiteral, OP50, null)
OP53:      (DEL, InfixExpression, OP47, OP54 OP55 OP56)
OP54:         (DEL, SimpleName, OP53, null)
OP55:         (DEL, Operator, OP53, null)
OP56:         (DEL, SimpleName, OP53, null)
OP57:      (DEL, PostfixExpression, OP47, OP58 OP59)
OP58:         (DEL, SimpleName, OP57, null)
OP59:         (DEL, Operator, OP57, null)
OP60:      (DEL, ExpressionStatement, OP47, null)
OP61:      (DEL, ExpressionStatement, OP47, OP62)
OP62:         (DEL, Assignment, OP61, OP63 OP64 OP65)
OP63:            (DEL, SimpleName, OP62, null)
OP64:            (DEL, Operator, OP62, null)
OP65:            (DEL, SimpleName, OP62, null)
OP66:      (DEL, IfStatement, OP47, OP67 OP77 OP89 OP107)
OP67:         (DEL, InfixExpression, OP66, OP68 OP72 OP73)
OP68:            (DEL, InfixExpression, OP67, OP69 OP70 OP71)
OP69:               (DEL, SimpleName, OP68, null)
OP70:               (DEL, Operator, OP68, null)
OP71:               (DEL, NumberLiteral, OP68, null)
OP72:            (DEL, Operator, OP67, null)
OP73:            (DEL, InfixExpression, OP67, OP74 OP75 OP76)
OP74:               (DEL, SimpleName, OP73, null)
OP75:               (DEL, Operator, OP73, null)
OP76:               (DEL, SimpleName, OP73, null)
OP77:         (DEL, ExpressionStatement, OP66, OP78)
OP78:            (DEL, Assignment, OP77, OP79 OP80 OP81)
OP79:               (DEL, SimpleName, OP78, null)
OP80:               (DEL, Operator, OP78, null)
OP81:               (DEL, InfixExpression, OP78, OP82 OP85)
OP82:                  (DEL, InfixExpression, OP81, OP83 OP84)
OP83:                     (DEL, Operator, OP82, null)
OP84:                     (DEL, SimpleName, OP82, null)
OP85:                  (DEL, ParenthesizedExpression, OP81, OP86)
OP86:                     (DEL, InfixExpression, OP85, OP87 OP88)
OP87:                        (DEL, Operator, OP86, null)
OP88:                        (DEL, SimpleName, OP86, null)
OP89:         (DEL, ExpressionStatement, OP66, OP90)
OP90:            (DEL, Assignment, OP89, OP91 OP92 OP93)
OP91:               (DEL, SimpleName, OP90, null)
OP92:               (DEL, Operator, OP90, null)
OP93:               (DEL, InfixExpression, OP90, OP94 OP98 OP99)
OP94:                  (DEL, InfixExpression, OP93, OP95 OP96 OP97)
OP95:                     (DEL, SimpleName, OP94, null)
OP96:                     (DEL, Operator, OP94, null)
OP97:                     (DEL, SimpleName, OP94, null)
OP98:                  (DEL, Operator, OP93, null)
OP99:                  (DEL, ParenthesizedExpression, OP93, OP100)
OP100:                     (DEL, InfixExpression, OP99, OP101 OP105 OP106)
OP101:                        (DEL, InfixExpression, OP100, OP102 OP103 OP104)
OP102:                           (DEL, SimpleName, OP101, null)
OP103:                           (DEL, Operator, OP101, null)
OP104:                           (DEL, SimpleName, OP101, null)
OP105:                        (DEL, Operator, OP100, null)
OP106:                        (DEL, SimpleName, OP100, null)
OP107:         (DEL, IfStatement, OP66, OP108 OP112)
OP108:            (DEL, InfixExpression, OP107, OP109 OP110 OP111)
OP109:               (DEL, SimpleName, OP108, null)
OP110:               (DEL, Operator, OP108, null)
OP111:               (DEL, NumberLiteral, OP108, null)
OP112:            (DEL, ExpressionStatement, OP107, null)
OP113:      (DEL, IfStatement, OP47, OP114 OP127)
OP114:         (DEL, PrefixExpression, OP113, OP115 OP116)
OP115:            (DEL, Operator, OP114, null)
OP116:            (DEL, ParenthesizedExpression, OP114, OP117)
OP117:               (DEL, InfixExpression, OP116, OP118 OP122 OP123)
OP118:                  (DEL, MethodInvocation, OP117, OP119 OP120)
OP119:                     (DEL, SimpleName, OP118, null)
OP120:                     (DEL, SimpleName, OP118, OP121)
OP121:                        (DEL, SimpleName, OP120, null)
OP122:                  (DEL, Operator, OP117, null)
OP123:                  (DEL, MethodInvocation, OP117, OP124 OP125)
OP124:                     (DEL, SimpleName, OP123, null)
OP125:                     (DEL, SimpleName, OP123, OP126)
OP126:                        (DEL, SimpleName, OP125, null)
OP127:         (DEL, BreakStatement, OP113, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(INS, IfStatement, null, OP2 OP8)
OP2:   (INS, MethodInvocation, OP1, OP3 OP4)
OP3:      (INS, SimpleName, OP2, null)
OP4:      (INS, SimpleName, OP2, OP5 OP6 OP7)
OP5:         (INS, SimpleName, OP4, null)
OP6:         (INS, NumberLiteral, OP4, null)
OP7:         (INS, SimpleName, OP4, null)
OP8:   (MOV, ExpressionStatement, OP1, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(INS, ExpressionStatement, null, OP2)
OP2:   (MOV, Assignment, OP1, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, ExpressionStatement, null, OP2)
OP2:   (UPD, Assignment, OP1, OP3 OP4)
OP3:      (INS, SimpleName, OP2, null)
OP4:      (DEL, InfixExpression, OP2, OP5 OP13 OP14)
OP5:         (DEL, ParenthesizedExpression, OP4, OP6)
OP6:            (DEL, InfixExpression, OP5, OP7 OP11 OP12)
OP7:               (DEL, InfixExpression, OP6, OP8 OP9 OP10)
OP8:                  (DEL, SimpleName, OP7, null)
OP9:                  (DEL, Operator, OP7, null)
OP10:                  (DEL, SimpleName, OP7, null)
OP11:               (DEL, Operator, OP6, null)
OP12:               (DEL, SimpleName, OP6, null)
OP13:         (DEL, Operator, OP4, null)
OP14:         (DEL, InfixExpression, OP4, OP15 OP16 OP17)
OP15:            (DEL, SimpleName, OP14, null)
OP16:            (DEL, Operator, OP14, null)
OP17:            (DEL, SimpleName, OP14, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, VariableDeclarationStatement, null, OP2)
OP2:   (UPD, VariableDeclarationFragment, OP1, OP3)
OP3:      (UPD, InfixExpression, OP2, OP4 OP5 OP6)
OP4:         (UPD, Operator, OP3, null)
OP5:         (UPD, SimpleName, OP3, null)
OP6:         (DEL, SimpleName, OP3, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, ExpressionStatement, null, OP2)
OP2:   (UPD, Assignment, OP1, OP3)
OP3:      (UPD, InfixExpression, OP2, OP4)
OP4:         (UPD, SimpleName, OP3, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, ExpressionStatement, null, OP2)
OP2:   (UPD, Assignment, OP1, OP3)
OP3:      (UPD, SimpleName, OP2, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, ExpressionStatement, null, OP2)
OP2:   (UPD, Assignment, OP1, OP3 OP4)
OP3:      (INS, SimpleName, OP2, null)
OP4:      (DEL, InfixExpression, OP2, OP5 OP6 OP7)
OP5:         (DEL, SimpleName, OP4, null)
OP6:         (DEL, Operator, OP4, null)
OP7:         (DEL, SimpleName, OP4, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, ExpressionStatement, null, OP2)
OP2:   (DEL, Assignment, OP1, OP3 OP4 OP5)
OP3:      (DEL, SimpleName, OP2, null)
OP4:      (DEL, Operator, OP2, null)
OP5:      (DEL, SimpleName, OP2, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(UPD, ExpressionStatement, null, OP2)
OP2:   (UPD, Assignment, OP1, OP3)
OP3:      (UPD, SimpleName, OP2, null)





hASList: 
[DEL VariableDeclarationStatement@@double p0=1.0; @AT@ 4931 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@p0=1.0 @AT@ 4938 @LENGTH@ 8
------DEL SimpleName@@p0 @AT@ 4938 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4943 @LENGTH@ 3
, DEL VariableDeclarationStatement@@double q1=1.0; @AT@ 4956 @LENGTH@ 16
---DEL PrimitiveType@@double @AT@ 4956 @LENGTH@ 6
---DEL VariableDeclarationFragment@@q1=1.0 @AT@ 4963 @LENGTH@ 8
------DEL SimpleName@@q1 @AT@ 4963 @LENGTH@ 2
------DEL NumberLiteral@@1.0 @AT@ 4968 @LENGTH@ 3
, INS IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5151 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(dN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5155 @LENGTH@ 32
------MOV SimpleName@@Name:FastMath @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5467 @LENGTH@ 8
------MOV SimpleName@@MethodName:max:[a, b] @TO@ MethodInvocation@@Precision.equals(dN,0.0,small) @AT@ 5476 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:dN=small @TO@ IfStatement@@MethodInvocation:Precision.equals(dN,0.0,small) @AT@ 5207 @LENGTH@ 11
------MOV Assignment@@lastScaleFactor=scaleFactor @TO@ ExpressionStatement@@Assignment:dN=small @AT@ 5739 @LENGTH@ 29
, DEL VariableDeclarationStatement@@double cN=a * hPrev + b * p0; @AT@ 5162 @LENGTH@ 31
---DEL PrimitiveType@@double @AT@ 5162 @LENGTH@ 6
---DEL VariableDeclarationFragment@@cN=a * hPrev + b * p0 @AT@ 5169 @LENGTH@ 23
------DEL SimpleName@@cN @AT@ 5169 @LENGTH@ 2
------DEL InfixExpression@@a * hPrev + b * p0 @AT@ 5174 @LENGTH@ 18
---------DEL InfixExpression@@a * hPrev @AT@ 5174 @LENGTH@ 9
------------DEL SimpleName@@a @AT@ 5174 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5175 @LENGTH@ 1
------------DEL SimpleName@@hPrev @AT@ 5178 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 5183 @LENGTH@ 1
---------DEL InfixExpression@@b * p0 @AT@ 5186 @LENGTH@ 6
------------DEL SimpleName@@b @AT@ 5186 @LENGTH@ 1
------------DEL Operator@@* @AT@ 5187 @LENGTH@ 1
------------DEL SimpleName@@p0 @AT@ 5190 @LENGTH@ 2
, UPD VariableDeclarationStatement@@double q2=a * q1 + b * dPrev; @TO@ double dN=a + b * dPrev; @AT@ 5206 @LENGTH@ 31
---UPD VariableDeclarationFragment@@q2=a * q1 + b * dPrev @TO@ dN=a + b * dPrev @AT@ 5213 @LENGTH@ 23
------UPD SimpleName@@q2 @TO@ dN @AT@ 5213 @LENGTH@ 2
------UPD InfixExpression@@a * q1 + b * dPrev @TO@ a + b * dPrev @AT@ 5218 @LENGTH@ 18
---------MOV SimpleName@@a @TO@ InfixExpression@@a * q1 + b * dPrev @AT@ 5218 @LENGTH@ 1
---------DEL InfixExpression@@a * q1 @AT@ 5218 @LENGTH@ 6
------------DEL Operator@@* @AT@ 5219 @LENGTH@ 1
------------DEL SimpleName@@q1 @AT@ 5222 @LENGTH@ 2
, INS VariableDeclarationStatement@@double cN=a + b / cPrev; @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5245 @LENGTH@ 26
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5245 @LENGTH@ 6
---INS VariableDeclarationFragment@@cN=a + b / cPrev @TO@ VariableDeclarationStatement@@double cN=a + b / cPrev; @AT@ 5252 @LENGTH@ 18
------INS SimpleName@@cN @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5252 @LENGTH@ 2
------INS InfixExpression@@a + b / cPrev @TO@ VariableDeclarationFragment@@cN=a + b / cPrev @AT@ 5257 @LENGTH@ 13
---------MOV SimpleName@@hPrev @TO@ InfixExpression@@a + b / cPrev @AT@ 5886 @LENGTH@ 5
---------MOV Operator@@+ @TO@ InfixExpression@@a + b / cPrev @AT@ 5909 @LENGTH@ 1
---------MOV InfixExpression@@b / scaleFactor @TO@ InfixExpression@@a + b / cPrev @AT@ 5913 @LENGTH@ 15
, DEL IfStatement@@InfixExpression:Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5250 @LENGTH@ 1147
---DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 5254 @LENGTH@ 46
------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 5254 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5254 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 5261 @LENGTH@ 14
------------DEL SimpleName@@cN @AT@ 5272 @LENGTH@ 2
------DEL Operator@@|| @AT@ 5275 @LENGTH@ 2
------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 5279 @LENGTH@ 21
---------DEL SimpleName@@Name:Double @AT@ 5279 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 5286 @LENGTH@ 14
------------DEL SimpleName@@q2 @AT@ 5297 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double scaleFactor=1d; @AT@ 5320 @LENGTH@ 24
------DEL PrimitiveType@@double @AT@ 5320 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scaleFactor=1d @AT@ 5327 @LENGTH@ 16
---------DEL SimpleName@@scaleFactor @AT@ 5327 @LENGTH@ 11
---------DEL NumberLiteral@@1d @AT@ 5341 @LENGTH@ 2
---DEL VariableDeclarationStatement@@double lastScaleFactor=1d; @AT@ 5361 @LENGTH@ 28
------DEL PrimitiveType@@double @AT@ 5361 @LENGTH@ 6
------DEL VariableDeclarationFragment@@lastScaleFactor=1d @AT@ 5368 @LENGTH@ 20
---------DEL SimpleName@@lastScaleFactor @AT@ 5368 @LENGTH@ 15
---------DEL NumberLiteral@@1d @AT@ 5386 @LENGTH@ 2
---DEL VariableDeclarationStatement@@final int maxPower=5; @AT@ 5406 @LENGTH@ 23
------DEL Modifier@@final @AT@ 5406 @LENGTH@ 5
------DEL PrimitiveType@@int @AT@ 5412 @LENGTH@ 3
------DEL VariableDeclarationFragment@@maxPower=5 @AT@ 5416 @LENGTH@ 12
---------DEL SimpleName@@maxPower @AT@ 5416 @LENGTH@ 8
---------DEL NumberLiteral@@5 @AT@ 5427 @LENGTH@ 1
---DEL VariableDeclarationStatement@@final double scale=FastMath.max(a,b); @AT@ 5446 @LENGTH@ 39
------DEL Modifier@@final @AT@ 5446 @LENGTH@ 5
------DEL PrimitiveType@@double @AT@ 5452 @LENGTH@ 6
------DEL VariableDeclarationFragment@@scale=FastMath.max(a,b) @AT@ 5459 @LENGTH@ 25
---------DEL SimpleName@@scale @AT@ 5459 @LENGTH@ 5
---------DEL MethodInvocation@@FastMath.max(a,b) @AT@ 5467 @LENGTH@ 17
---DEL IfStatement@@InfixExpression:scale <= 0 @AT@ 5502 @LENGTH@ 163
------DEL InfixExpression@@scale <= 0 @AT@ 5506 @LENGTH@ 10
---------DEL SimpleName@@scale @AT@ 5506 @LENGTH@ 5
---------DEL Operator@@<= @AT@ 5511 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5515 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,x) @AT@ 5556 @LENGTH@ 91
---------DEL ClassInstanceCreation@@ConvergenceException[LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x] @AT@ 5562 @LENGTH@ 84
------------DEL New@@new @AT@ 5562 @LENGTH@ 3
------------DEL SimpleType@@ConvergenceException @AT@ 5566 @LENGTH@ 20
------------DEL QualifiedName@@LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5587 @LENGTH@ 55
---------------DEL SimpleName@@LocalizedFormats @AT@ 5587 @LENGTH@ 16
---------------DEL SimpleName@@CONTINUED_FRACTION_INFINITY_DIVERGENCE @AT@ 5604 @LENGTH@ 38
------------DEL SimpleName@@x @AT@ 5644 @LENGTH@ 1
---DEL ForStatement@@[int i=0];i < maxPower; [i++] @AT@ 5682 @LENGTH@ 701
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5687 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5687 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5691 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5691 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5695 @LENGTH@ 1
------DEL InfixExpression@@i < maxPower @AT@ 5698 @LENGTH@ 12
---------DEL SimpleName@@i @AT@ 5698 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5699 @LENGTH@ 1
---------DEL SimpleName@@maxPower @AT@ 5702 @LENGTH@ 8
------DEL PostfixExpression@@i++ @AT@ 5712 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5712 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5714 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:lastScaleFactor=scaleFactor @AT@ 5739 @LENGTH@ 30
------DEL ExpressionStatement@@Assignment:scaleFactor*=scale @AT@ 5790 @LENGTH@ 21
---------DEL Assignment@@scaleFactor*=scale @AT@ 5790 @LENGTH@ 20
------------DEL SimpleName@@scaleFactor @AT@ 5790 @LENGTH@ 11
------------DEL Operator@@*= @AT@ 5801 @LENGTH@ 2
------------DEL SimpleName@@scale @AT@ 5805 @LENGTH@ 5
------DEL IfStatement@@InfixExpression:a != 0.0 && a > b @AT@ 5832 @LENGTH@ 403
---------DEL InfixExpression@@a != 0.0 && a > b @AT@ 5836 @LENGTH@ 17
------------DEL InfixExpression@@a != 0.0 @AT@ 5836 @LENGTH@ 8
---------------DEL SimpleName@@a @AT@ 5836 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 5837 @LENGTH@ 2
---------------DEL NumberLiteral@@0.0 @AT@ 5841 @LENGTH@ 3
------------DEL Operator@@&& @AT@ 5844 @LENGTH@ 2
------------DEL InfixExpression@@a > b @AT@ 5848 @LENGTH@ 5
---------------DEL SimpleName@@a @AT@ 5848 @LENGTH@ 1
---------------DEL Operator@@> @AT@ 5849 @LENGTH@ 1
---------------DEL SimpleName@@b @AT@ 5852 @LENGTH@ 1
---------DEL ExpressionStatement@@Assignment:cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 54
------------DEL Assignment@@cN=hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5881 @LENGTH@ 53
---------------DEL SimpleName@@cN @AT@ 5881 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5883 @LENGTH@ 1
---------------DEL InfixExpression@@hPrev / lastScaleFactor + (b / scaleFactor * p0) @AT@ 5886 @LENGTH@ 48
------------------DEL InfixExpression@@hPrev / lastScaleFactor @AT@ 5886 @LENGTH@ 23
---------------------DEL Operator@@/ @AT@ 5891 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5894 @LENGTH@ 15
------------------DEL ParenthesizedExpression@@(b / scaleFactor * p0) @AT@ 5912 @LENGTH@ 22
---------------------DEL InfixExpression@@b / scaleFactor * p0 @AT@ 5913 @LENGTH@ 20
------------------------DEL Operator@@* @AT@ 5928 @LENGTH@ 1
------------------------DEL SimpleName@@p0 @AT@ 5931 @LENGTH@ 2
---------DEL ExpressionStatement@@Assignment:q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 54
------------DEL Assignment@@q2=q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5960 @LENGTH@ 53
---------------DEL SimpleName@@q2 @AT@ 5960 @LENGTH@ 2
---------------DEL Operator@@= @AT@ 5962 @LENGTH@ 1
---------------DEL InfixExpression@@q1 / lastScaleFactor + (b / scaleFactor * dPrev) @AT@ 5965 @LENGTH@ 48
------------------DEL InfixExpression@@q1 / lastScaleFactor @AT@ 5965 @LENGTH@ 20
---------------------DEL SimpleName@@q1 @AT@ 5965 @LENGTH@ 2
---------------------DEL Operator@@/ @AT@ 5967 @LENGTH@ 1
---------------------DEL SimpleName@@lastScaleFactor @AT@ 5970 @LENGTH@ 15
------------------DEL Operator@@+ @AT@ 5985 @LENGTH@ 1
------------------DEL ParenthesizedExpression@@(b / scaleFactor * dPrev) @AT@ 5988 @LENGTH@ 25
---------------------DEL InfixExpression@@b / scaleFactor * dPrev @AT@ 5989 @LENGTH@ 23
------------------------DEL InfixExpression@@b / scaleFactor @AT@ 5989 @LENGTH@ 15
---------------------------DEL SimpleName@@b @AT@ 5989 @LENGTH@ 1
---------------------------DEL Operator@@/ @AT@ 5990 @LENGTH@ 1
---------------------------DEL SimpleName@@scaleFactor @AT@ 5993 @LENGTH@ 11
------------------------DEL Operator@@* @AT@ 6004 @LENGTH@ 1
------------------------DEL SimpleName@@dPrev @AT@ 6007 @LENGTH@ 5
---------DEL IfStatement@@InfixExpression:b != 0 @AT@ 6042 @LENGTH@ 193
------------DEL InfixExpression@@b != 0 @AT@ 6046 @LENGTH@ 6
---------------DEL SimpleName@@b @AT@ 6046 @LENGTH@ 1
---------------DEL Operator@@!= @AT@ 6047 @LENGTH@ 2
---------------DEL NumberLiteral@@0 @AT@ 6051 @LENGTH@ 1
------------DEL ExpressionStatement@@Assignment:q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @AT@ 6159 @LENGTH@ 54
------DEL IfStatement@@PrefixExpression:!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6256 @LENGTH@ 109
---------DEL PrefixExpression@@!(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6260 @LENGTH@ 49
------------DEL Operator@@! @AT@ 6260 @LENGTH@ 1
------------DEL ParenthesizedExpression@@(Double.isInfinite(cN) || Double.isInfinite(q2)) @AT@ 6261 @LENGTH@ 48
---------------DEL InfixExpression@@Double.isInfinite(cN) || Double.isInfinite(q2) @AT@ 6262 @LENGTH@ 46
------------------DEL MethodInvocation@@Double.isInfinite(cN) @AT@ 6262 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6262 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[cN] @AT@ 6269 @LENGTH@ 14
------------------------DEL SimpleName@@cN @AT@ 6280 @LENGTH@ 2
------------------DEL Operator@@|| @AT@ 6283 @LENGTH@ 2
------------------DEL MethodInvocation@@Double.isInfinite(q2) @AT@ 6287 @LENGTH@ 21
---------------------DEL SimpleName@@Name:Double @AT@ 6287 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:isInfinite:[q2] @AT@ 6294 @LENGTH@ 14
------------------------DEL SimpleName@@q2 @AT@ 6305 @LENGTH@ 2
---------DEL BreakStatement@@ @AT@ 6337 @LENGTH@ 6
, INS IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5284 @LENGTH@ 81
---INS MethodInvocation@@Precision.equals(cN,0.0,small) @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 32
------INS SimpleName@@Name:Precision @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5288 @LENGTH@ 9
------INS SimpleName@@MethodName:equals:[cN, 0.0, small] @TO@ MethodInvocation@@Precision.equals(cN,0.0,small) @AT@ 5298 @LENGTH@ 22
---------INS SimpleName@@cN @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5305 @LENGTH@ 2
---------INS NumberLiteral@@0.0 @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5309 @LENGTH@ 3
---------INS SimpleName@@small @TO@ SimpleName@@MethodName:equals:[cN, 0.0, small] @AT@ 5314 @LENGTH@ 5
---MOV ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ IfStatement@@MethodInvocation:Precision.equals(cN,0.0,small) @AT@ 6080 @LENGTH@ 54
, INS ExpressionStatement@@Assignment:dN=1 / dN @TO@ WhileStatement@@InfixExpression:n < maxIterations @AT@ 5379 @LENGTH@ 12
---MOV Assignment@@q2=(a / scaleFactor * q1) + dPrev / lastScaleFactor @TO@ ExpressionStatement@@Assignment:dN=1 / dN @AT@ 6159 @LENGTH@ 53
, UPD ExpressionStatement@@Assignment:cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ Assignment:cN=small @AT@ 6080 @LENGTH@ 54
---UPD Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @TO@ cN=small @AT@ 6080 @LENGTH@ 53
------INS SimpleName@@small @TO@ Assignment@@cN=(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 5345 @LENGTH@ 5
------DEL InfixExpression@@(a / scaleFactor * hPrev) + p0 / lastScaleFactor @AT@ 6085 @LENGTH@ 48
---------DEL ParenthesizedExpression@@(a / scaleFactor * hPrev) @AT@ 6085 @LENGTH@ 25
------------DEL InfixExpression@@a / scaleFactor * hPrev @AT@ 6086 @LENGTH@ 23
---------------DEL InfixExpression@@a / scaleFactor @AT@ 6086 @LENGTH@ 15
------------------DEL SimpleName@@a @AT@ 6086 @LENGTH@ 1
------------------DEL Operator@@/ @AT@ 6087 @LENGTH@ 1
------------------DEL SimpleName@@scaleFactor @AT@ 6090 @LENGTH@ 11
---------------DEL Operator@@* @AT@ 6101 @LENGTH@ 1
---------------DEL SimpleName@@hPrev @AT@ 6104 @LENGTH@ 5
---------DEL Operator@@+ @AT@ 6110 @LENGTH@ 1
---------DEL InfixExpression@@p0 / lastScaleFactor @AT@ 6113 @LENGTH@ 20
------------DEL SimpleName@@p0 @AT@ 6113 @LENGTH@ 2
------------DEL Operator@@/ @AT@ 6115 @LENGTH@ 1
------------DEL SimpleName@@lastScaleFactor @AT@ 6118 @LENGTH@ 15
, UPD VariableDeclarationStatement@@final double deltaN=cN / q2 / cPrev; @TO@ final double deltaN=cN * dN; @AT@ 6411 @LENGTH@ 38
---UPD VariableDeclarationFragment@@deltaN=cN / q2 / cPrev @TO@ deltaN=cN * dN @AT@ 6424 @LENGTH@ 24
------UPD InfixExpression@@cN / q2 / cPrev @TO@ cN * dN @AT@ 6433 @LENGTH@ 15
---------UPD Operator@@/ @TO@ * @AT@ 6435 @LENGTH@ 1
---------UPD SimpleName@@q2 @TO@ dN @AT@ 6438 @LENGTH@ 2
---------DEL SimpleName@@cPrev @AT@ 6443 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hN=cPrev * deltaN @TO@ Assignment:hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 20
---UPD Assignment@@hN=cPrev * deltaN @TO@ hN=hPrev * deltaN @AT@ 6462 @LENGTH@ 19
------UPD InfixExpression@@cPrev * deltaN @TO@ hPrev * deltaN @AT@ 6467 @LENGTH@ 14
---------UPD SimpleName@@cPrev @TO@ hPrev @AT@ 6467 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:dPrev=q1 @TO@ Assignment:dPrev=dN @AT@ 7001 @LENGTH@ 11
---UPD Assignment@@dPrev=q1 @TO@ dPrev=dN @AT@ 7001 @LENGTH@ 10
------UPD SimpleName@@q1 @TO@ dN @AT@ 7009 @LENGTH@ 2
, UPD ExpressionStatement@@Assignment:cPrev=cN / q2 @TO@ Assignment:cPrev=cN @AT@ 7025 @LENGTH@ 16
---UPD Assignment@@cPrev=cN / q2 @TO@ cPrev=cN @AT@ 7025 @LENGTH@ 15
------INS SimpleName@@cN @TO@ Assignment@@cPrev=cN / q2 @AT@ 6018 @LENGTH@ 2
------DEL InfixExpression@@cN / q2 @AT@ 7033 @LENGTH@ 7
---------DEL SimpleName@@cN @AT@ 7033 @LENGTH@ 2
---------DEL Operator@@/ @AT@ 7035 @LENGTH@ 1
---------DEL SimpleName@@q2 @AT@ 7038 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:p0=hPrev @AT@ 7054 @LENGTH@ 11
---DEL Assignment@@p0=hPrev @AT@ 7054 @LENGTH@ 10
------DEL SimpleName@@p0 @AT@ 7054 @LENGTH@ 2
------DEL Operator@@= @AT@ 7056 @LENGTH@ 1
------DEL SimpleName@@hPrev @AT@ 7059 @LENGTH@ 5
, UPD ExpressionStatement@@Assignment:hPrev=cN @TO@ Assignment:hPrev=hN @AT@ 7078 @LENGTH@ 11
---UPD Assignment@@hPrev=cN @TO@ hPrev=hN @AT@ 7078 @LENGTH@ 10
------UPD SimpleName@@cN @TO@ hN @AT@ 7086 @LENGTH@ 2
, DEL ExpressionStatement@@Assignment:q1=q2 @AT@ 7102 @LENGTH@ 8
---DEL Assignment@@q1=q2 @AT@ 7102 @LENGTH@ 7
------DEL SimpleName@@q1 @AT@ 7102 @LENGTH@ 2
------DEL Operator@@= @AT@ 7104 @LENGTH@ 1
------DEL SimpleName@@q2 @AT@ 7107 @LENGTH@ 2
]

CII:
OP1:(DEL, ExpressionStatement, null, OP2)
OP2:   (DEL, Assignment, OP1, OP3 OP4 OP5)
OP3:      (DEL, SimpleName, OP2, null)
OP4:      (DEL, Operator, OP2, null)
OP5:      (DEL, SimpleName, OP2, null)



