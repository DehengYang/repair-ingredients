

hASList: 
[UPD VariableDeclarationStatement@@Iterator iter=entries.iterator(); @TO@ final int n=getDimension(); @AT@ 11624 @LENGTH@ 35
---INS Modifier@@final @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11624 @LENGTH@ 5
---DEL SimpleType@@Iterator @AT@ 11624 @LENGTH@ 8
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11630 @LENGTH@ 3
---UPD VariableDeclarationFragment@@iter=entries.iterator() @TO@ n=getDimension() @AT@ 11633 @LENGTH@ 25
------UPD SimpleName@@iter @TO@ n @AT@ 11633 @LENGTH@ 4
------UPD MethodInvocation@@entries.iterator() @TO@ MethodName:getDimension:[] @AT@ 11640 @LENGTH@ 18
---------DEL SimpleName@@Name:entries @AT@ 11640 @LENGTH@ 7
---------DEL SimpleName@@MethodName:iterator:[] @AT@ 11648 @LENGTH@ 10
, INS ForStatement@@[int i=0];i < n; [i++] @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeDivide, @@Argus:RealVector+v+ @AT@ 11662 @LENGTH@ 102
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11667 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11667 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11671 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 11671 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 11675 @LENGTH@ 1
---INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11678 @LENGTH@ 5
------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 11678 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 11679 @LENGTH@ 1
------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 11682 @LENGTH@ 1
---INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11685 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 11685 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 11687 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11704 @LENGTH@ 50
------MOV MethodInvocation@@res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @AT@ 11733 @LENGTH@ 63
, DEL WhileStatement@@MethodInvocation:iter.hasNext() @AT@ 11668 @LENGTH@ 139
---DEL MethodInvocation@@iter.hasNext() @AT@ 11675 @LENGTH@ 14
------DEL SimpleName@@Name:iter @AT@ 11675 @LENGTH@ 4
------DEL SimpleName@@MethodName:hasNext:[] @AT@ 11680 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:iter.advance() @AT@ 11705 @LENGTH@ 15
------DEL MethodInvocation@@iter.advance() @AT@ 11705 @LENGTH@ 14
---------DEL SimpleName@@Name:iter @AT@ 11705 @LENGTH@ 4
---------DEL SimpleName@@MethodName:advance:[] @AT@ 11710 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @AT@ 11733 @LENGTH@ 64
, INS IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeMultiply, @@Argus:RealVector+v+ @AT@ 12518 @LENGTH@ 446
---INS InfixExpression@@v.isNaN() || v.isInfinite() @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 27
------INS MethodInvocation@@v.isNaN() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 9
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isNaN() @AT@ 12522 @LENGTH@ 1
---------INS SimpleName@@MethodName:isNaN:[] @TO@ MethodInvocation@@v.isNaN() @AT@ 12524 @LENGTH@ 7
------INS Operator@@|| @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12531 @LENGTH@ 2
------INS MethodInvocation@@v.isInfinite() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12535 @LENGTH@ 14
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isInfinite() @AT@ 12535 @LENGTH@ 1
---------INS SimpleName@@MethodName:isInfinite:[] @TO@ MethodInvocation@@v.isInfinite() @AT@ 12537 @LENGTH@ 12
---INS VariableDeclarationStatement@@final int n=getDimension(); @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12565 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12565 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12571 @LENGTH@ 3
------INS VariableDeclarationFragment@@n=getDimension() @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12575 @LENGTH@ 18
---------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12575 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getDimension:[] @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12579 @LENGTH@ 14
---INS ForStatement@@[int i=0];i < n; [i++] @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12607 @LENGTH@ 347
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12612 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12612 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12616 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 12616 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 12620 @LENGTH@ 1
------INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12623 @LENGTH@ 5
---------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 12623 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 12624 @LENGTH@ 1
---------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 12627 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12630 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 12630 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 12632 @LENGTH@ 2
------INS VariableDeclarationStatement@@final double y=v.getEntry(i); @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12653 @LENGTH@ 31
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12653 @LENGTH@ 5
---------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12659 @LENGTH@ 6
---------INS VariableDeclarationFragment@@y=v.getEntry(i) @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12666 @LENGTH@ 17
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12666 @LENGTH@ 1
------------INS MethodInvocation@@v.getEntry(i) @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12670 @LENGTH@ 13
---------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12670 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12672 @LENGTH@ 11
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12681 @LENGTH@ 1
------INS IfStatement@@MethodInvocation:Double.isNaN(y) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12701 @LENGTH@ 239
---------INS MethodInvocation@@Double.isNaN(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12705 @LENGTH@ 15
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12705 @LENGTH@ 6
------------INS SimpleName@@MethodName:isNaN:[y] @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12712 @LENGTH@ 8
---------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isNaN:[y] @AT@ 12718 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12744 @LENGTH@ 28
------------INS MethodInvocation@@res.setEntry(i,Double.NaN) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 27
---------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setEntry:[i, Double.NaN] @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12748 @LENGTH@ 23
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12757 @LENGTH@ 1
------------------INS QualifiedName@@Double.NaN @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12760 @LENGTH@ 10
---------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.NaN @AT@ 12760 @LENGTH@ 6
---------------------INS SimpleName@@NaN @TO@ QualifiedName@@Double.NaN @AT@ 12767 @LENGTH@ 3
---------INS IfStatement@@MethodInvocation:Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12796 @LENGTH@ 144
------------INS MethodInvocation@@Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12800 @LENGTH@ 20
---------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12800 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isInfinite:[y] @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12807 @LENGTH@ 13
------------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isInfinite:[y] @AT@ 12818 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final double x=this.getEntry(i); @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12844 @LENGTH@ 34
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12844 @LENGTH@ 5
---------------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12850 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@x=this.getEntry(i) @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12857 @LENGTH@ 20
------------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12857 @LENGTH@ 1
------------------INS MethodInvocation@@this.getEntry(i) @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12861 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12861 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12866 @LENGTH@ 11
------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12875 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12899 @LENGTH@ 23
---------------INS MethodInvocation@@res.setEntry(i,x * y) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 22
------------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 3
------------------INS SimpleName@@MethodName:setEntry:[i, x * y] @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12903 @LENGTH@ 18
---------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12912 @LENGTH@ 1
---------------------INS InfixExpression@@x * y @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12915 @LENGTH@ 5
------------------------INS SimpleName@@x @TO@ InfixExpression@@x * y @AT@ 12915 @LENGTH@ 1
------------------------INS Operator@@* @TO@ InfixExpression@@x * y @AT@ 12916 @LENGTH@ 1
------------------------INS SimpleName@@y @TO@ InfixExpression@@x * y @AT@ 12919 @LENGTH@ 1
]

CII:
OP1:(UPD, VariableDeclarationStatement, null, OP2 OP3 OP4 OP5)
OP2:   (INS, Modifier, OP1, null)
OP3:   (DEL, SimpleType, OP1, null)
OP4:   (INS, PrimitiveType, OP1, null)
OP5:   (UPD, VariableDeclarationFragment, OP1, OP6 OP7)
OP6:      (UPD, SimpleName, OP5, null)
OP7:      (UPD, MethodInvocation, OP5, OP8 OP9)
OP8:         (DEL, SimpleName, OP7, null)
OP9:         (DEL, SimpleName, OP7, null)





hASList: 
[UPD VariableDeclarationStatement@@Iterator iter=entries.iterator(); @TO@ final int n=getDimension(); @AT@ 11624 @LENGTH@ 35
---INS Modifier@@final @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11624 @LENGTH@ 5
---DEL SimpleType@@Iterator @AT@ 11624 @LENGTH@ 8
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11630 @LENGTH@ 3
---UPD VariableDeclarationFragment@@iter=entries.iterator() @TO@ n=getDimension() @AT@ 11633 @LENGTH@ 25
------UPD SimpleName@@iter @TO@ n @AT@ 11633 @LENGTH@ 4
------UPD MethodInvocation@@entries.iterator() @TO@ MethodName:getDimension:[] @AT@ 11640 @LENGTH@ 18
---------DEL SimpleName@@Name:entries @AT@ 11640 @LENGTH@ 7
---------DEL SimpleName@@MethodName:iterator:[] @AT@ 11648 @LENGTH@ 10
, INS ForStatement@@[int i=0];i < n; [i++] @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeDivide, @@Argus:RealVector+v+ @AT@ 11662 @LENGTH@ 102
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11667 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11667 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11671 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 11671 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 11675 @LENGTH@ 1
---INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11678 @LENGTH@ 5
------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 11678 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 11679 @LENGTH@ 1
------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 11682 @LENGTH@ 1
---INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11685 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 11685 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 11687 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11704 @LENGTH@ 50
------MOV MethodInvocation@@res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @AT@ 11733 @LENGTH@ 63
, DEL WhileStatement@@MethodInvocation:iter.hasNext() @AT@ 11668 @LENGTH@ 139
---DEL MethodInvocation@@iter.hasNext() @AT@ 11675 @LENGTH@ 14
------DEL SimpleName@@Name:iter @AT@ 11675 @LENGTH@ 4
------DEL SimpleName@@MethodName:hasNext:[] @AT@ 11680 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:iter.advance() @AT@ 11705 @LENGTH@ 15
------DEL MethodInvocation@@iter.advance() @AT@ 11705 @LENGTH@ 14
---------DEL SimpleName@@Name:iter @AT@ 11705 @LENGTH@ 4
---------DEL SimpleName@@MethodName:advance:[] @AT@ 11710 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @AT@ 11733 @LENGTH@ 64
, INS IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeMultiply, @@Argus:RealVector+v+ @AT@ 12518 @LENGTH@ 446
---INS InfixExpression@@v.isNaN() || v.isInfinite() @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 27
------INS MethodInvocation@@v.isNaN() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 9
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isNaN() @AT@ 12522 @LENGTH@ 1
---------INS SimpleName@@MethodName:isNaN:[] @TO@ MethodInvocation@@v.isNaN() @AT@ 12524 @LENGTH@ 7
------INS Operator@@|| @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12531 @LENGTH@ 2
------INS MethodInvocation@@v.isInfinite() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12535 @LENGTH@ 14
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isInfinite() @AT@ 12535 @LENGTH@ 1
---------INS SimpleName@@MethodName:isInfinite:[] @TO@ MethodInvocation@@v.isInfinite() @AT@ 12537 @LENGTH@ 12
---INS VariableDeclarationStatement@@final int n=getDimension(); @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12565 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12565 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12571 @LENGTH@ 3
------INS VariableDeclarationFragment@@n=getDimension() @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12575 @LENGTH@ 18
---------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12575 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getDimension:[] @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12579 @LENGTH@ 14
---INS ForStatement@@[int i=0];i < n; [i++] @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12607 @LENGTH@ 347
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12612 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12612 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12616 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 12616 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 12620 @LENGTH@ 1
------INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12623 @LENGTH@ 5
---------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 12623 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 12624 @LENGTH@ 1
---------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 12627 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12630 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 12630 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 12632 @LENGTH@ 2
------INS VariableDeclarationStatement@@final double y=v.getEntry(i); @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12653 @LENGTH@ 31
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12653 @LENGTH@ 5
---------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12659 @LENGTH@ 6
---------INS VariableDeclarationFragment@@y=v.getEntry(i) @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12666 @LENGTH@ 17
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12666 @LENGTH@ 1
------------INS MethodInvocation@@v.getEntry(i) @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12670 @LENGTH@ 13
---------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12670 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12672 @LENGTH@ 11
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12681 @LENGTH@ 1
------INS IfStatement@@MethodInvocation:Double.isNaN(y) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12701 @LENGTH@ 239
---------INS MethodInvocation@@Double.isNaN(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12705 @LENGTH@ 15
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12705 @LENGTH@ 6
------------INS SimpleName@@MethodName:isNaN:[y] @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12712 @LENGTH@ 8
---------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isNaN:[y] @AT@ 12718 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12744 @LENGTH@ 28
------------INS MethodInvocation@@res.setEntry(i,Double.NaN) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 27
---------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setEntry:[i, Double.NaN] @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12748 @LENGTH@ 23
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12757 @LENGTH@ 1
------------------INS QualifiedName@@Double.NaN @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12760 @LENGTH@ 10
---------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.NaN @AT@ 12760 @LENGTH@ 6
---------------------INS SimpleName@@NaN @TO@ QualifiedName@@Double.NaN @AT@ 12767 @LENGTH@ 3
---------INS IfStatement@@MethodInvocation:Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12796 @LENGTH@ 144
------------INS MethodInvocation@@Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12800 @LENGTH@ 20
---------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12800 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isInfinite:[y] @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12807 @LENGTH@ 13
------------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isInfinite:[y] @AT@ 12818 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final double x=this.getEntry(i); @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12844 @LENGTH@ 34
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12844 @LENGTH@ 5
---------------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12850 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@x=this.getEntry(i) @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12857 @LENGTH@ 20
------------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12857 @LENGTH@ 1
------------------INS MethodInvocation@@this.getEntry(i) @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12861 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12861 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12866 @LENGTH@ 11
------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12875 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12899 @LENGTH@ 23
---------------INS MethodInvocation@@res.setEntry(i,x * y) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 22
------------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 3
------------------INS SimpleName@@MethodName:setEntry:[i, x * y] @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12903 @LENGTH@ 18
---------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12912 @LENGTH@ 1
---------------------INS InfixExpression@@x * y @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12915 @LENGTH@ 5
------------------------INS SimpleName@@x @TO@ InfixExpression@@x * y @AT@ 12915 @LENGTH@ 1
------------------------INS Operator@@* @TO@ InfixExpression@@x * y @AT@ 12916 @LENGTH@ 1
------------------------INS SimpleName@@y @TO@ InfixExpression@@x * y @AT@ 12919 @LENGTH@ 1
]

CII:
OP1:(INS, ForStatement, null, OP2 OP7 OP11 OP14)
OP2:   (INS, VariableDeclarationExpression, OP1, OP3 OP4)
OP3:      (INS, PrimitiveType, OP2, null)
OP4:      (INS, VariableDeclarationFragment, OP2, OP5 OP6)
OP5:         (INS, SimpleName, OP4, null)
OP6:         (INS, NumberLiteral, OP4, null)
OP7:   (INS, InfixExpression, OP1, OP8 OP9 OP10)
OP8:      (INS, SimpleName, OP7, null)
OP9:      (INS, Operator, OP7, null)
OP10:      (INS, SimpleName, OP7, null)
OP11:   (INS, PostfixExpression, OP1, OP12 OP13)
OP12:      (INS, SimpleName, OP11, null)
OP13:      (INS, Operator, OP11, null)
OP14:   (INS, ExpressionStatement, OP1, OP15)
OP15:      (MOV, MethodInvocation, OP14, null)





hASList: 
[UPD VariableDeclarationStatement@@Iterator iter=entries.iterator(); @TO@ final int n=getDimension(); @AT@ 11624 @LENGTH@ 35
---INS Modifier@@final @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11624 @LENGTH@ 5
---DEL SimpleType@@Iterator @AT@ 11624 @LENGTH@ 8
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11630 @LENGTH@ 3
---UPD VariableDeclarationFragment@@iter=entries.iterator() @TO@ n=getDimension() @AT@ 11633 @LENGTH@ 25
------UPD SimpleName@@iter @TO@ n @AT@ 11633 @LENGTH@ 4
------UPD MethodInvocation@@entries.iterator() @TO@ MethodName:getDimension:[] @AT@ 11640 @LENGTH@ 18
---------DEL SimpleName@@Name:entries @AT@ 11640 @LENGTH@ 7
---------DEL SimpleName@@MethodName:iterator:[] @AT@ 11648 @LENGTH@ 10
, INS ForStatement@@[int i=0];i < n; [i++] @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeDivide, @@Argus:RealVector+v+ @AT@ 11662 @LENGTH@ 102
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11667 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11667 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11671 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 11671 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 11675 @LENGTH@ 1
---INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11678 @LENGTH@ 5
------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 11678 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 11679 @LENGTH@ 1
------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 11682 @LENGTH@ 1
---INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11685 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 11685 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 11687 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11704 @LENGTH@ 50
------MOV MethodInvocation@@res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @AT@ 11733 @LENGTH@ 63
, DEL WhileStatement@@MethodInvocation:iter.hasNext() @AT@ 11668 @LENGTH@ 139
---DEL MethodInvocation@@iter.hasNext() @AT@ 11675 @LENGTH@ 14
------DEL SimpleName@@Name:iter @AT@ 11675 @LENGTH@ 4
------DEL SimpleName@@MethodName:hasNext:[] @AT@ 11680 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:iter.advance() @AT@ 11705 @LENGTH@ 15
------DEL MethodInvocation@@iter.advance() @AT@ 11705 @LENGTH@ 14
---------DEL SimpleName@@Name:iter @AT@ 11705 @LENGTH@ 4
---------DEL SimpleName@@MethodName:advance:[] @AT@ 11710 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @AT@ 11733 @LENGTH@ 64
, INS IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeMultiply, @@Argus:RealVector+v+ @AT@ 12518 @LENGTH@ 446
---INS InfixExpression@@v.isNaN() || v.isInfinite() @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 27
------INS MethodInvocation@@v.isNaN() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 9
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isNaN() @AT@ 12522 @LENGTH@ 1
---------INS SimpleName@@MethodName:isNaN:[] @TO@ MethodInvocation@@v.isNaN() @AT@ 12524 @LENGTH@ 7
------INS Operator@@|| @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12531 @LENGTH@ 2
------INS MethodInvocation@@v.isInfinite() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12535 @LENGTH@ 14
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isInfinite() @AT@ 12535 @LENGTH@ 1
---------INS SimpleName@@MethodName:isInfinite:[] @TO@ MethodInvocation@@v.isInfinite() @AT@ 12537 @LENGTH@ 12
---INS VariableDeclarationStatement@@final int n=getDimension(); @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12565 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12565 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12571 @LENGTH@ 3
------INS VariableDeclarationFragment@@n=getDimension() @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12575 @LENGTH@ 18
---------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12575 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getDimension:[] @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12579 @LENGTH@ 14
---INS ForStatement@@[int i=0];i < n; [i++] @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12607 @LENGTH@ 347
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12612 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12612 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12616 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 12616 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 12620 @LENGTH@ 1
------INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12623 @LENGTH@ 5
---------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 12623 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 12624 @LENGTH@ 1
---------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 12627 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12630 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 12630 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 12632 @LENGTH@ 2
------INS VariableDeclarationStatement@@final double y=v.getEntry(i); @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12653 @LENGTH@ 31
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12653 @LENGTH@ 5
---------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12659 @LENGTH@ 6
---------INS VariableDeclarationFragment@@y=v.getEntry(i) @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12666 @LENGTH@ 17
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12666 @LENGTH@ 1
------------INS MethodInvocation@@v.getEntry(i) @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12670 @LENGTH@ 13
---------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12670 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12672 @LENGTH@ 11
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12681 @LENGTH@ 1
------INS IfStatement@@MethodInvocation:Double.isNaN(y) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12701 @LENGTH@ 239
---------INS MethodInvocation@@Double.isNaN(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12705 @LENGTH@ 15
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12705 @LENGTH@ 6
------------INS SimpleName@@MethodName:isNaN:[y] @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12712 @LENGTH@ 8
---------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isNaN:[y] @AT@ 12718 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12744 @LENGTH@ 28
------------INS MethodInvocation@@res.setEntry(i,Double.NaN) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 27
---------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setEntry:[i, Double.NaN] @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12748 @LENGTH@ 23
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12757 @LENGTH@ 1
------------------INS QualifiedName@@Double.NaN @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12760 @LENGTH@ 10
---------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.NaN @AT@ 12760 @LENGTH@ 6
---------------------INS SimpleName@@NaN @TO@ QualifiedName@@Double.NaN @AT@ 12767 @LENGTH@ 3
---------INS IfStatement@@MethodInvocation:Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12796 @LENGTH@ 144
------------INS MethodInvocation@@Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12800 @LENGTH@ 20
---------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12800 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isInfinite:[y] @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12807 @LENGTH@ 13
------------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isInfinite:[y] @AT@ 12818 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final double x=this.getEntry(i); @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12844 @LENGTH@ 34
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12844 @LENGTH@ 5
---------------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12850 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@x=this.getEntry(i) @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12857 @LENGTH@ 20
------------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12857 @LENGTH@ 1
------------------INS MethodInvocation@@this.getEntry(i) @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12861 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12861 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12866 @LENGTH@ 11
------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12875 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12899 @LENGTH@ 23
---------------INS MethodInvocation@@res.setEntry(i,x * y) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 22
------------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 3
------------------INS SimpleName@@MethodName:setEntry:[i, x * y] @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12903 @LENGTH@ 18
---------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12912 @LENGTH@ 1
---------------------INS InfixExpression@@x * y @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12915 @LENGTH@ 5
------------------------INS SimpleName@@x @TO@ InfixExpression@@x * y @AT@ 12915 @LENGTH@ 1
------------------------INS Operator@@* @TO@ InfixExpression@@x * y @AT@ 12916 @LENGTH@ 1
------------------------INS SimpleName@@y @TO@ InfixExpression@@x * y @AT@ 12919 @LENGTH@ 1
]

CII:
OP1:(DEL, WhileStatement, null, OP2 OP5 OP9)
OP2:   (DEL, MethodInvocation, OP1, OP3 OP4)
OP3:      (DEL, SimpleName, OP2, null)
OP4:      (DEL, SimpleName, OP2, null)
OP5:   (DEL, ExpressionStatement, OP1, OP6)
OP6:      (DEL, MethodInvocation, OP5, OP7 OP8)
OP7:         (DEL, SimpleName, OP6, null)
OP8:         (DEL, SimpleName, OP6, null)
OP9:   (DEL, ExpressionStatement, OP1, null)





hASList: 
[UPD VariableDeclarationStatement@@Iterator iter=entries.iterator(); @TO@ final int n=getDimension(); @AT@ 11624 @LENGTH@ 35
---INS Modifier@@final @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11624 @LENGTH@ 5
---DEL SimpleType@@Iterator @AT@ 11624 @LENGTH@ 8
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@Iterator iter=entries.iterator(); @AT@ 11630 @LENGTH@ 3
---UPD VariableDeclarationFragment@@iter=entries.iterator() @TO@ n=getDimension() @AT@ 11633 @LENGTH@ 25
------UPD SimpleName@@iter @TO@ n @AT@ 11633 @LENGTH@ 4
------UPD MethodInvocation@@entries.iterator() @TO@ MethodName:getDimension:[] @AT@ 11640 @LENGTH@ 18
---------DEL SimpleName@@Name:entries @AT@ 11640 @LENGTH@ 7
---------DEL SimpleName@@MethodName:iterator:[] @AT@ 11648 @LENGTH@ 10
, INS ForStatement@@[int i=0];i < n; [i++] @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeDivide, @@Argus:RealVector+v+ @AT@ 11662 @LENGTH@ 102
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11667 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11667 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 11671 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 11671 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 11675 @LENGTH@ 1
---INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11678 @LENGTH@ 5
------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 11678 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 11679 @LENGTH@ 1
------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 11682 @LENGTH@ 1
---INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11685 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 11685 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 11687 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 11704 @LENGTH@ 50
------MOV MethodInvocation@@res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,this.getEntry(i) / v.getEntry(i)) @AT@ 11733 @LENGTH@ 63
, DEL WhileStatement@@MethodInvocation:iter.hasNext() @AT@ 11668 @LENGTH@ 139
---DEL MethodInvocation@@iter.hasNext() @AT@ 11675 @LENGTH@ 14
------DEL SimpleName@@Name:iter @AT@ 11675 @LENGTH@ 4
------DEL SimpleName@@MethodName:hasNext:[] @AT@ 11680 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:iter.advance() @AT@ 11705 @LENGTH@ 15
------DEL MethodInvocation@@iter.advance() @AT@ 11705 @LENGTH@ 14
---------DEL SimpleName@@Name:iter @AT@ 11705 @LENGTH@ 4
---------DEL SimpleName@@MethodName:advance:[] @AT@ 11710 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:res.setEntry(iter.key(),iter.value() / v.getEntry(iter.key())) @AT@ 11733 @LENGTH@ 64
, INS IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @TO@ MethodDeclaration@@public, @@OpenMapRealVector, MethodName:ebeMultiply, @@Argus:RealVector+v+ @AT@ 12518 @LENGTH@ 446
---INS InfixExpression@@v.isNaN() || v.isInfinite() @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 27
------INS MethodInvocation@@v.isNaN() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12522 @LENGTH@ 9
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isNaN() @AT@ 12522 @LENGTH@ 1
---------INS SimpleName@@MethodName:isNaN:[] @TO@ MethodInvocation@@v.isNaN() @AT@ 12524 @LENGTH@ 7
------INS Operator@@|| @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12531 @LENGTH@ 2
------INS MethodInvocation@@v.isInfinite() @TO@ InfixExpression@@v.isNaN() || v.isInfinite() @AT@ 12535 @LENGTH@ 14
---------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.isInfinite() @AT@ 12535 @LENGTH@ 1
---------INS SimpleName@@MethodName:isInfinite:[] @TO@ MethodInvocation@@v.isInfinite() @AT@ 12537 @LENGTH@ 12
---INS VariableDeclarationStatement@@final int n=getDimension(); @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12565 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12565 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12571 @LENGTH@ 3
------INS VariableDeclarationFragment@@n=getDimension() @TO@ VariableDeclarationStatement@@final int n=getDimension(); @AT@ 12575 @LENGTH@ 18
---------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12575 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:getDimension:[] @TO@ VariableDeclarationFragment@@n=getDimension() @AT@ 12579 @LENGTH@ 14
---INS ForStatement@@[int i=0];i < n; [i++] @TO@ IfStatement@@InfixExpression:v.isNaN() || v.isInfinite() @AT@ 12607 @LENGTH@ 347
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12612 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12612 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 12616 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 12616 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 12620 @LENGTH@ 1
------INS InfixExpression@@i < n @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12623 @LENGTH@ 5
---------INS SimpleName@@i @TO@ InfixExpression@@i < n @AT@ 12623 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < n @AT@ 12624 @LENGTH@ 1
---------INS SimpleName@@n @TO@ InfixExpression@@i < n @AT@ 12627 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12630 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 12630 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 12632 @LENGTH@ 2
------INS VariableDeclarationStatement@@final double y=v.getEntry(i); @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12653 @LENGTH@ 31
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12653 @LENGTH@ 5
---------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12659 @LENGTH@ 6
---------INS VariableDeclarationFragment@@y=v.getEntry(i) @TO@ VariableDeclarationStatement@@final double y=v.getEntry(i); @AT@ 12666 @LENGTH@ 17
------------INS SimpleName@@y @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12666 @LENGTH@ 1
------------INS MethodInvocation@@v.getEntry(i) @TO@ VariableDeclarationFragment@@y=v.getEntry(i) @AT@ 12670 @LENGTH@ 13
---------------INS SimpleName@@Name:v @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12670 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@v.getEntry(i) @AT@ 12672 @LENGTH@ 11
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12681 @LENGTH@ 1
------INS IfStatement@@MethodInvocation:Double.isNaN(y) @TO@ ForStatement@@[int i=0];i < n; [i++] @AT@ 12701 @LENGTH@ 239
---------INS MethodInvocation@@Double.isNaN(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12705 @LENGTH@ 15
------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12705 @LENGTH@ 6
------------INS SimpleName@@MethodName:isNaN:[y] @TO@ MethodInvocation@@Double.isNaN(y) @AT@ 12712 @LENGTH@ 8
---------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isNaN:[y] @AT@ 12718 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12744 @LENGTH@ 28
------------INS MethodInvocation@@res.setEntry(i,Double.NaN) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 27
---------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12744 @LENGTH@ 3
---------------INS SimpleName@@MethodName:setEntry:[i, Double.NaN] @TO@ MethodInvocation@@res.setEntry(i,Double.NaN) @AT@ 12748 @LENGTH@ 23
------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12757 @LENGTH@ 1
------------------INS QualifiedName@@Double.NaN @TO@ SimpleName@@MethodName:setEntry:[i, Double.NaN] @AT@ 12760 @LENGTH@ 10
---------------------INS SimpleName@@Double @TO@ QualifiedName@@Double.NaN @AT@ 12760 @LENGTH@ 6
---------------------INS SimpleName@@NaN @TO@ QualifiedName@@Double.NaN @AT@ 12767 @LENGTH@ 3
---------INS IfStatement@@MethodInvocation:Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isNaN(y) @AT@ 12796 @LENGTH@ 144
------------INS MethodInvocation@@Double.isInfinite(y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12800 @LENGTH@ 20
---------------INS SimpleName@@Name:Double @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12800 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isInfinite:[y] @TO@ MethodInvocation@@Double.isInfinite(y) @AT@ 12807 @LENGTH@ 13
------------------INS SimpleName@@y @TO@ SimpleName@@MethodName:isInfinite:[y] @AT@ 12818 @LENGTH@ 1
------------INS VariableDeclarationStatement@@final double x=this.getEntry(i); @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12844 @LENGTH@ 34
---------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12844 @LENGTH@ 5
---------------INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12850 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@x=this.getEntry(i) @TO@ VariableDeclarationStatement@@final double x=this.getEntry(i); @AT@ 12857 @LENGTH@ 20
------------------INS SimpleName@@x @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12857 @LENGTH@ 1
------------------INS MethodInvocation@@this.getEntry(i) @TO@ VariableDeclarationFragment@@x=this.getEntry(i) @AT@ 12861 @LENGTH@ 16
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12861 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getEntry:[i] @TO@ MethodInvocation@@this.getEntry(i) @AT@ 12866 @LENGTH@ 11
------------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:getEntry:[i] @AT@ 12875 @LENGTH@ 1
------------INS ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @TO@ IfStatement@@MethodInvocation:Double.isInfinite(y) @AT@ 12899 @LENGTH@ 23
---------------INS MethodInvocation@@res.setEntry(i,x * y) @TO@ ExpressionStatement@@MethodInvocation:res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 22
------------------INS SimpleName@@Name:res @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12899 @LENGTH@ 3
------------------INS SimpleName@@MethodName:setEntry:[i, x * y] @TO@ MethodInvocation@@res.setEntry(i,x * y) @AT@ 12903 @LENGTH@ 18
---------------------INS SimpleName@@i @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12912 @LENGTH@ 1
---------------------INS InfixExpression@@x * y @TO@ SimpleName@@MethodName:setEntry:[i, x * y] @AT@ 12915 @LENGTH@ 5
------------------------INS SimpleName@@x @TO@ InfixExpression@@x * y @AT@ 12915 @LENGTH@ 1
------------------------INS Operator@@* @TO@ InfixExpression@@x * y @AT@ 12916 @LENGTH@ 1
------------------------INS SimpleName@@y @TO@ InfixExpression@@x * y @AT@ 12919 @LENGTH@ 1
]

CII:
OP1:(INS, IfStatement, null, OP2 OP10 OP16)
OP2:   (INS, InfixExpression, OP1, OP3 OP6 OP7)
OP3:      (INS, MethodInvocation, OP2, OP4 OP5)
OP4:         (INS, SimpleName, OP3, null)
OP5:         (INS, SimpleName, OP3, null)
OP6:      (INS, Operator, OP2, null)
OP7:      (INS, MethodInvocation, OP2, OP8 OP9)
OP8:         (INS, SimpleName, OP7, null)
OP9:         (INS, SimpleName, OP7, null)
OP10:   (INS, VariableDeclarationStatement, OP1, OP11 OP12 OP13)
OP11:      (INS, Modifier, OP10, null)
OP12:      (INS, PrimitiveType, OP10, null)
OP13:      (INS, VariableDeclarationFragment, OP10, OP14 OP15)
OP14:         (INS, SimpleName, OP13, null)
OP15:         (INS, MethodInvocation, OP13, null)
OP16:   (INS, ForStatement, OP1, OP17 OP22 OP26 OP29 OP38)
OP17:      (INS, VariableDeclarationExpression, OP16, OP18 OP19)
OP18:         (INS, PrimitiveType, OP17, null)
OP19:         (INS, VariableDeclarationFragment, OP17, OP20 OP21)
OP20:            (INS, SimpleName, OP19, null)
OP21:            (INS, NumberLiteral, OP19, null)
OP22:      (INS, InfixExpression, OP16, OP23 OP24 OP25)
OP23:         (INS, SimpleName, OP22, null)
OP24:         (INS, Operator, OP22, null)
OP25:         (INS, SimpleName, OP22, null)
OP26:      (INS, PostfixExpression, OP16, OP27 OP28)
OP27:         (INS, SimpleName, OP26, null)
OP28:         (INS, Operator, OP26, null)
OP29:      (INS, VariableDeclarationStatement, OP16, OP30 OP31 OP32)
OP30:         (INS, Modifier, OP29, null)
OP31:         (INS, PrimitiveType, OP29, null)
OP32:         (INS, VariableDeclarationFragment, OP29, OP33 OP34)
OP33:            (INS, SimpleName, OP32, null)
OP34:            (INS, MethodInvocation, OP32, OP35 OP36)
OP35:               (INS, SimpleName, OP34, null)
OP36:               (INS, SimpleName, OP34, OP37)
OP37:                  (INS, SimpleName, OP36, null)
OP38:      (INS, IfStatement, OP16, OP39 OP43 OP51)
OP39:         (INS, MethodInvocation, OP38, OP40 OP41)
OP40:            (INS, SimpleName, OP39, null)
OP41:            (INS, SimpleName, OP39, OP42)
OP42:               (INS, SimpleName, OP41, null)
OP43:         (INS, ExpressionStatement, OP38, OP44)
OP44:            (INS, MethodInvocation, OP43, OP45 OP46)
OP45:               (INS, SimpleName, OP44, null)
OP46:               (INS, SimpleName, OP44, OP47 OP48)
OP47:                  (INS, SimpleName, OP46, null)
OP48:                  (INS, QualifiedName, OP46, OP49 OP50)
OP49:                     (INS, SimpleName, OP48, null)
OP50:                     (INS, SimpleName, OP48, null)
OP51:         (INS, IfStatement, OP38, OP52 OP56 OP65)
OP52:            (INS, MethodInvocation, OP51, OP53 OP54)
OP53:               (INS, SimpleName, OP52, null)
OP54:               (INS, SimpleName, OP52, OP55)
OP55:                  (INS, SimpleName, OP54, null)
OP56:            (INS, VariableDeclarationStatement, OP51, OP57 OP58 OP59)
OP57:               (INS, Modifier, OP56, null)
OP58:               (INS, PrimitiveType, OP56, null)
OP59:               (INS, VariableDeclarationFragment, OP56, OP60 OP61)
OP60:                  (INS, SimpleName, OP59, null)
OP61:                  (INS, MethodInvocation, OP59, OP62 OP63)
OP62:                     (INS, ThisExpression, OP61, null)
OP63:                     (INS, SimpleName, OP61, OP64)
OP64:                        (INS, SimpleName, OP63, null)
OP65:            (INS, ExpressionStatement, OP51, OP66)
OP66:               (INS, MethodInvocation, OP65, OP67 OP68)
OP67:                  (INS, SimpleName, OP66, null)
OP68:                  (INS, SimpleName, OP66, OP69 OP70)
OP69:                     (INS, SimpleName, OP68, null)
OP70:                     (INS, InfixExpression, OP68, OP71 OP72 OP73)
OP71:                        (INS, SimpleName, OP70, null)
OP72:                        (INS, Operator, OP70, null)
OP73:                        (INS, SimpleName, OP70, null)



