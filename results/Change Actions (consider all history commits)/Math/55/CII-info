

hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, IfStatement, null, OP2 OP10)
OP2:   (INS, InfixExpression, OP1, OP3 OP8 OP9)
OP3:      (INS, ParenthesizedExpression, OP2, OP4)
OP4:         (INS, InfixExpression, OP3, OP5 OP6 OP7)
OP5:            (INS, SimpleName, OP4, null)
OP6:            (INS, SimpleName, OP4, null)
OP7:            (MOV, Operator, OP4, null)
OP8:      (INS, Operator, OP2, null)
OP9:      (MOV, QualifiedName, OP2, null)
OP10:   (INS, ReturnStatement, OP1, OP11)
OP11:      (INS, SimpleName, OP10, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP18 OP19)
OP7:         (INS, ParenthesizedExpression, OP6, OP8)
OP8:            (INS, InfixExpression, OP7, OP9 OP13 OP17)
OP9:               (INS, MethodInvocation, OP8, OP10 OP11)
OP10:                  (INS, SimpleName, OP9, null)
OP11:                  (INS, SimpleName, OP9, OP12)
OP12:                     (INS, SimpleName, OP11, null)
OP13:               (INS, MethodInvocation, OP8, OP14 OP15)
OP14:                  (INS, SimpleName, OP13, null)
OP15:                  (INS, SimpleName, OP13, OP16)
OP16:                     (INS, SimpleName, OP15, null)
OP17:               (MOV, Operator, OP8, null)
OP18:         (INS, Operator, OP6, null)
OP19:         (INS, NumberLiteral, OP6, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, PrefixExpression, OP8, OP13 OP14)
OP13:               (INS, Operator, OP12, null)
OP14:               (INS, SimpleName, OP12, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, PrefixExpression, OP8, OP13 OP14)
OP13:               (INS, Operator, OP12, null)
OP14:               (INS, SimpleName, OP12, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, PrefixExpression, OP8, OP13 OP14)
OP13:               (INS, Operator, OP12, null)
OP14:               (INS, SimpleName, OP12, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, SimpleName, OP8, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, SimpleName, OP8, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(DEL, ReturnStatement, null, OP2)
OP2:   (DEL, ClassInstanceCreation, OP1, OP3 OP4 OP5 OP14 OP24)
OP3:      (DEL, New, OP2, null)
OP4:      (DEL, SimpleType, OP2, null)
OP5:      (DEL, InfixExpression, OP2, OP6 OP10)
OP6:         (DEL, InfixExpression, OP5, OP7)
OP7:            (DEL, QualifiedName, OP6, OP8 OP9)
OP8:               (DEL, SimpleName, OP7, null)
OP9:               (DEL, SimpleName, OP7, null)
OP10:         (DEL, InfixExpression, OP5, OP11 OP12 OP13)
OP11:            (DEL, QualifiedName, OP10, null)
OP12:            (DEL, Operator, OP10, null)
OP13:            (DEL, QualifiedName, OP10, null)
OP14:      (DEL, InfixExpression, OP2, OP15 OP19 OP20)
OP15:         (DEL, InfixExpression, OP14, OP16 OP17 OP18)
OP16:            (DEL, QualifiedName, OP15, null)
OP17:            (DEL, Operator, OP15, null)
OP18:            (DEL, QualifiedName, OP15, null)
OP19:         (DEL, Operator, OP14, null)
OP20:         (DEL, InfixExpression, OP14, OP21 OP22 OP23)
OP21:            (DEL, QualifiedName, OP20, null)
OP22:            (DEL, Operator, OP20, null)
OP23:            (DEL, QualifiedName, OP20, null)
OP24:      (DEL, InfixExpression, OP2, OP25 OP32)
OP25:         (DEL, InfixExpression, OP24, OP26 OP29)
OP26:            (DEL, QualifiedName, OP25, OP27 OP28)
OP27:               (DEL, SimpleName, OP26, null)
OP28:               (DEL, SimpleName, OP26, null)
OP29:            (DEL, QualifiedName, OP25, OP30 OP31)
OP30:               (DEL, SimpleName, OP29, null)
OP31:               (DEL, SimpleName, OP29, null)
OP32:         (DEL, InfixExpression, OP24, OP33 OP36)
OP33:            (DEL, QualifiedName, OP32, OP34 OP35)
OP34:               (DEL, SimpleName, OP33, null)
OP35:               (DEL, SimpleName, OP33, null)
OP36:            (DEL, QualifiedName, OP32, OP37 OP38)
OP37:               (DEL, SimpleName, OP36, null)
OP38:               (DEL, SimpleName, OP36, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, MethodInvocation, OP4, OP7 OP8)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, SimpleName, OP6, OP9 OP12)
OP9:            (INS, QualifiedName, OP8, OP10 OP11)
OP10:               (MOV, SimpleName, OP9, null)
OP11:               (MOV, SimpleName, OP9, null)
OP12:            (INS, SimpleName, OP8, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP24 OP25)
OP7:         (INS, ParenthesizedExpression, OP6, OP8)
OP8:            (INS, InfixExpression, OP7, OP9 OP19 OP20)
OP9:               (INS, InfixExpression, OP8, OP10 OP14 OP15)
OP10:                  (INS, InfixExpression, OP9, OP11 OP12 OP13)
OP11:                     (INS, SimpleName, OP10, null)
OP12:                     (INS, Operator, OP10, null)
OP13:                     (INS, SimpleName, OP10, null)
OP14:                  (INS, Operator, OP9, null)
OP15:                  (INS, InfixExpression, OP9, OP16 OP17 OP18)
OP16:                     (MOV, Operator, OP15, null)
OP17:                     (INS, SimpleName, OP15, null)
OP18:                     (INS, SimpleName, OP15, null)
OP19:               (INS, Operator, OP8, null)
OP20:               (INS, InfixExpression, OP8, OP21 OP22 OP23)
OP21:                  (INS, SimpleName, OP20, null)
OP22:                  (INS, Operator, OP20, null)
OP23:                  (INS, SimpleName, OP20, null)
OP24:         (INS, Operator, OP6, null)
OP25:         (INS, MethodInvocation, OP6, OP26 OP27)
OP26:            (INS, SimpleName, OP25, null)
OP27:            (INS, SimpleName, OP25, OP28 OP29)
OP28:               (INS, SimpleName, OP27, null)
OP29:               (INS, InfixExpression, OP27, OP30 OP31 OP32)
OP30:                  (INS, NumberLiteral, OP29, null)
OP31:                  (INS, Operator, OP29, null)
OP32:                  (INS, SimpleName, OP29, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP14 OP15)
OP7:         (INS, MethodInvocation, OP6, OP8 OP9)
OP8:            (INS, SimpleName, OP7, null)
OP9:            (INS, SimpleName, OP7, OP10)
OP10:               (INS, InfixExpression, OP9, OP11 OP12 OP13)
OP11:                  (INS, NumberLiteral, OP10, null)
OP12:                  (INS, Operator, OP10, null)
OP13:                  (INS, SimpleName, OP10, null)
OP14:         (INS, Operator, OP6, null)
OP15:         (INS, NumberLiteral, OP6, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP8 OP9)
OP7:         (MOV, Operator, OP6, null)
OP8:         (INS, SimpleName, OP6, null)
OP9:         (INS, InfixExpression, OP6, OP10 OP11 OP12)
OP10:            (INS, SimpleName, OP9, null)
OP11:            (INS, Operator, OP9, null)
OP12:            (INS, SimpleName, OP9, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP8 OP9)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, Operator, OP6, null)
OP9:         (INS, InfixExpression, OP6, OP10 OP11 OP12)
OP10:            (INS, SimpleName, OP9, null)
OP11:            (INS, Operator, OP9, null)
OP12:            (INS, SimpleName, OP9, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, VariableDeclarationStatement, null, OP2 OP3 OP4)
OP2:   (INS, Modifier, OP1, null)
OP3:   (INS, PrimitiveType, OP1, null)
OP4:   (INS, VariableDeclarationFragment, OP1, OP5 OP6)
OP5:      (INS, SimpleName, OP4, null)
OP6:      (INS, InfixExpression, OP4, OP7 OP8 OP9)
OP7:         (INS, SimpleName, OP6, null)
OP8:         (INS, Operator, OP6, null)
OP9:         (INS, InfixExpression, OP6, OP10 OP11 OP12)
OP10:            (MOV, Operator, OP9, null)
OP11:            (INS, SimpleName, OP9, null)
OP12:            (INS, SimpleName, OP9, null)





hASList: 
[INS VariableDeclarationStatement@@final double n1=v1.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15008 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15008 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15014 @LENGTH@ 6
---INS VariableDeclarationFragment@@n1=v1.getNormSq() @TO@ VariableDeclarationStatement@@final double n1=v1.getNormSq(); @AT@ 15021 @LENGTH@ 19
------INS SimpleName@@n1 @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15021 @LENGTH@ 2
------INS MethodInvocation@@v1.getNormSq() @TO@ VariableDeclarationFragment@@n1=v1.getNormSq() @AT@ 15026 @LENGTH@ 14
---------INS SimpleName@@Name:v1 @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15026 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v1.getNormSq() @AT@ 15029 @LENGTH@ 11
, INS VariableDeclarationStatement@@final double n2=v2.getNormSq(); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15048 @LENGTH@ 33
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15048 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15054 @LENGTH@ 6
---INS VariableDeclarationFragment@@n2=v2.getNormSq() @TO@ VariableDeclarationStatement@@final double n2=v2.getNormSq(); @AT@ 15061 @LENGTH@ 19
------INS SimpleName@@n2 @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15061 @LENGTH@ 2
------INS MethodInvocation@@v2.getNormSq() @TO@ VariableDeclarationFragment@@n2=v2.getNormSq() @AT@ 15066 @LENGTH@ 14
---------INS SimpleName@@Name:v2 @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15066 @LENGTH@ 2
---------INS SimpleName@@MethodName:getNormSq:[] @TO@ MethodInvocation@@v2.getNormSq() @AT@ 15069 @LENGTH@ 11
, INS IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15088 @LENGTH@ 68
---INS InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 30
------INS ParenthesizedExpression@@(n1 * n2) @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15092 @LENGTH@ 9
---------INS InfixExpression@@n1 * n2 @TO@ ParenthesizedExpression@@(n1 * n2) @AT@ 15093 @LENGTH@ 7
------------INS SimpleName@@n1 @TO@ InfixExpression@@n1 * n2 @AT@ 15093 @LENGTH@ 2
------------INS SimpleName@@n2 @TO@ InfixExpression@@n1 * n2 @AT@ 15098 @LENGTH@ 2
------------MOV Operator@@* @TO@ InfixExpression@@n1 * n2 @AT@ 15649 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15101 @LENGTH@ 1
------MOV QualifiedName@@v2.z @TO@ InfixExpression@@(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15652 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:ZERO @TO@ IfStatement@@InfixExpression:(n1 * n2) < MathUtils.SAFE_MIN @AT@ 15136 @LENGTH@ 12
------INS SimpleName@@ZERO @TO@ ReturnStatement@@SimpleName:ZERO @AT@ 15143 @LENGTH@ 4
, INS VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15282 @LENGTH@ 79
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15282 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15288 @LENGTH@ 3
---INS VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationStatement@@final int deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4; @AT@ 15292 @LENGTH@ 68
------INS SimpleName@@deltaExp @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15292 @LENGTH@ 8
------INS InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @TO@ VariableDeclarationFragment@@deltaExp=(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 57
---------INS ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15303 @LENGTH@ 53
------------INS InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @TO@ ParenthesizedExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) @AT@ 15304 @LENGTH@ 51
---------------INS MethodInvocation@@FastMath.getExponent(n1) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15304 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15304 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n1] @TO@ MethodInvocation@@FastMath.getExponent(n1) @AT@ 15313 @LENGTH@ 15
---------------------INS SimpleName@@n1 @TO@ SimpleName@@MethodName:getExponent:[n1] @AT@ 15325 @LENGTH@ 2
---------------INS MethodInvocation@@FastMath.getExponent(n2) @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 24
------------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15331 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getExponent:[n2] @TO@ MethodInvocation@@FastMath.getExponent(n2) @AT@ 15340 @LENGTH@ 15
---------------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:getExponent:[n2] @AT@ 15352 @LENGTH@ 2
---------------MOV Operator@@- @TO@ InfixExpression@@FastMath.getExponent(n1) - FastMath.getExponent(n2) @AT@ 15656 @LENGTH@ 1
---------INS Operator@@/ @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15356 @LENGTH@ 1
---------INS NumberLiteral@@4 @TO@ InfixExpression@@(FastMath.getExponent(n1) - FastMath.getExponent(n2)) / 4 @AT@ 15359 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15368 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15368 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15374 @LENGTH@ 6
---INS VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationStatement@@final double x1=FastMath.scalb(v1.x,-deltaExp); @AT@ 15381 @LENGTH@ 39
------INS SimpleName@@x1 @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15381 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @TO@ VariableDeclarationFragment@@x1=FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15389 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.x,-deltaExp) @AT@ 15398 @LENGTH@ 22
------------INS QualifiedName@@v1.x @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15404 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.x @AT@ 15659 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.x @AT@ 15662 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.x, -deltaExp] @AT@ 15410 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15410 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15411 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15428 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15428 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15434 @LENGTH@ 6
---INS VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationStatement@@final double y1=FastMath.scalb(v1.y,-deltaExp); @AT@ 15441 @LENGTH@ 39
------INS SimpleName@@y1 @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15441 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @TO@ VariableDeclarationFragment@@y1=FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15449 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.y,-deltaExp) @AT@ 15458 @LENGTH@ 22
------------INS QualifiedName@@v1.y @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15464 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v1.y @AT@ 15666 @LENGTH@ 2
---------------MOV SimpleName@@y @TO@ QualifiedName@@v1.y @AT@ 15669 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.y, -deltaExp] @AT@ 15470 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15470 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15471 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15488 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15488 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15494 @LENGTH@ 6
---INS VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationStatement@@final double z1=FastMath.scalb(v1.z,-deltaExp); @AT@ 15501 @LENGTH@ 39
------INS SimpleName@@z1 @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15501 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @TO@ VariableDeclarationFragment@@z1=FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15509 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v1.z,-deltaExp) @AT@ 15518 @LENGTH@ 22
------------INS QualifiedName@@v1.z @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15524 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v1.z @AT@ 15675 @LENGTH@ 1
------------INS PrefixExpression@@-deltaExp @TO@ SimpleName@@MethodName:scalb:[v1.z, -deltaExp] @AT@ 15530 @LENGTH@ 9
---------------INS Operator@@- @TO@ PrefixExpression@@-deltaExp @AT@ 15530 @LENGTH@ 1
---------------INS SimpleName@@deltaExp @TO@ PrefixExpression@@-deltaExp @AT@ 15531 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15548 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15548 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15554 @LENGTH@ 6
---INS VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationStatement@@final double x2=FastMath.scalb(v2.x,deltaExp); @AT@ 15561 @LENGTH@ 39
------INS SimpleName@@x2 @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15561 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @TO@ VariableDeclarationFragment@@x2=FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15569 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.x, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.x,deltaExp) @AT@ 15578 @LENGTH@ 22
------------INS QualifiedName@@v2.x @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15584 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.x @AT@ 15682 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.x, deltaExp] @AT@ 15591 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15608 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15608 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15614 @LENGTH@ 6
---INS VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationStatement@@final double y2=FastMath.scalb(v2.y,deltaExp); @AT@ 15621 @LENGTH@ 39
------INS SimpleName@@y2 @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15621 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @TO@ VariableDeclarationFragment@@y2=FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15629 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.y, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.y,deltaExp) @AT@ 15638 @LENGTH@ 22
------------INS QualifiedName@@v2.y @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15644 @LENGTH@ 4
---------------MOV SimpleName@@v1 @TO@ QualifiedName@@v2.y @AT@ 15686 @LENGTH@ 2
---------------MOV SimpleName@@x @TO@ QualifiedName@@v2.y @AT@ 15689 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.y, deltaExp] @AT@ 15651 @LENGTH@ 8
, DEL ReturnStatement@@ClassInstanceCreation:new Vector3D(v1.y * v2.z - v1.z * v2.y,v1.z * v2.x - v1.x * v2.z,v1.x * v2.y - v1.y * v2.x) @AT@ 15625 @LENGTH@ 101
---DEL ClassInstanceCreation@@Vector3D[v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x] @AT@ 15632 @LENGTH@ 93
------DEL New@@new @AT@ 15632 @LENGTH@ 3
------DEL SimpleType@@Vector3D @AT@ 15636 @LENGTH@ 8
------DEL InfixExpression@@v1.y * v2.z - v1.z * v2.y @AT@ 15645 @LENGTH@ 25
---------DEL InfixExpression@@v1.y * v2.z @AT@ 15645 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15645 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15645 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15648 @LENGTH@ 1
---------DEL InfixExpression@@v1.z * v2.y @AT@ 15659 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15659 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15663 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15666 @LENGTH@ 4
------DEL InfixExpression@@v1.z * v2.x - v1.x * v2.z @AT@ 15672 @LENGTH@ 25
---------DEL InfixExpression@@v1.z * v2.x @AT@ 15672 @LENGTH@ 11
------------DEL QualifiedName@@v1.z @AT@ 15672 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15676 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15679 @LENGTH@ 4
---------DEL Operator@@- @AT@ 15683 @LENGTH@ 1
---------DEL InfixExpression@@v1.x * v2.z @AT@ 15686 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15686 @LENGTH@ 4
------------DEL Operator@@* @AT@ 15690 @LENGTH@ 1
------------DEL QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 4
------DEL InfixExpression@@v1.x * v2.y - v1.y * v2.x @AT@ 15699 @LENGTH@ 25
---------DEL InfixExpression@@v1.x * v2.y @AT@ 15699 @LENGTH@ 11
------------DEL QualifiedName@@v1.x @AT@ 15699 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15699 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15702 @LENGTH@ 1
------------DEL QualifiedName@@v2.y @AT@ 15706 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15706 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15709 @LENGTH@ 1
---------DEL InfixExpression@@v1.y * v2.x @AT@ 15713 @LENGTH@ 11
------------DEL QualifiedName@@v1.y @AT@ 15713 @LENGTH@ 4
---------------DEL SimpleName@@v1 @AT@ 15713 @LENGTH@ 2
---------------DEL SimpleName@@y @AT@ 15716 @LENGTH@ 1
------------DEL QualifiedName@@v2.x @AT@ 15720 @LENGTH@ 4
---------------DEL SimpleName@@v2 @AT@ 15720 @LENGTH@ 2
---------------DEL SimpleName@@x @AT@ 15723 @LENGTH@ 1
, INS VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 15668 @LENGTH@ 53
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15668 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15674 @LENGTH@ 6
---INS VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationStatement@@final double z2=FastMath.scalb(v2.z,deltaExp); @AT@ 15681 @LENGTH@ 39
------INS SimpleName@@z2 @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15681 @LENGTH@ 2
------INS MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @TO@ VariableDeclarationFragment@@z2=FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 31
---------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15689 @LENGTH@ 8
---------INS SimpleName@@MethodName:scalb:[v2.z, deltaExp] @TO@ MethodInvocation@@FastMath.scalb(v2.z,deltaExp) @AT@ 15698 @LENGTH@ 22
------------INS QualifiedName@@v2.z @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15704 @LENGTH@ 4
---------------MOV SimpleName@@v2 @TO@ QualifiedName@@v2.z @AT@ 15693 @LENGTH@ 2
---------------MOV SimpleName@@z @TO@ QualifiedName@@v2.z @AT@ 15696 @LENGTH@ 1
------------INS SimpleName@@deltaExp @TO@ SimpleName@@MethodName:scalb:[v2.z, deltaExp] @AT@ 15711 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16157 @LENGTH@ 86
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16157 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16163 @LENGTH@ 6
---INS VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationStatement@@final double ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp); @AT@ 16170 @LENGTH@ 72
------INS SimpleName@@ratio @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16170 @LENGTH@ 5
------INS InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @TO@ VariableDeclarationFragment@@ratio=(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 64
---------INS ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16178 @LENGTH@ 29
------------INS InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @TO@ ParenthesizedExpression@@(x1 * x2 + y1 * y2 + z1 * z2) @AT@ 16179 @LENGTH@ 27
---------------INS InfixExpression@@x1 * x2 + y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16179 @LENGTH@ 17
------------------INS InfixExpression@@x1 * x2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16179 @LENGTH@ 7
---------------------INS SimpleName@@x1 @TO@ InfixExpression@@x1 * x2 @AT@ 16179 @LENGTH@ 2
---------------------INS Operator@@* @TO@ InfixExpression@@x1 * x2 @AT@ 16181 @LENGTH@ 1
---------------------INS SimpleName@@x2 @TO@ InfixExpression@@x1 * x2 @AT@ 16184 @LENGTH@ 2
------------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16186 @LENGTH@ 1
------------------INS InfixExpression@@y1 * y2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 @AT@ 16189 @LENGTH@ 7
---------------------MOV Operator@@* @TO@ InfixExpression@@y1 * y2 @AT@ 15703 @LENGTH@ 1
---------------------INS SimpleName@@y1 @TO@ InfixExpression@@y1 * y2 @AT@ 16189 @LENGTH@ 2
---------------------INS SimpleName@@y2 @TO@ InfixExpression@@y1 * y2 @AT@ 16194 @LENGTH@ 2
---------------INS Operator@@+ @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16196 @LENGTH@ 1
---------------INS InfixExpression@@z1 * z2 @TO@ InfixExpression@@x1 * x2 + y1 * y2 + z1 * z2 @AT@ 16199 @LENGTH@ 7
------------------INS SimpleName@@z1 @TO@ InfixExpression@@z1 * z2 @AT@ 16199 @LENGTH@ 2
------------------INS Operator@@* @TO@ InfixExpression@@z1 * z2 @AT@ 16201 @LENGTH@ 1
------------------INS SimpleName@@z2 @TO@ InfixExpression@@z1 * z2 @AT@ 16204 @LENGTH@ 2
---------INS Operator@@/ @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16207 @LENGTH@ 1
---------INS MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @TO@ InfixExpression@@(x1 * x2 + y1 * y2 + z1 * z2) / FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 32
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16210 @LENGTH@ 8
------------INS SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @TO@ MethodInvocation@@FastMath.scalb(n2,2 * deltaExp) @AT@ 16219 @LENGTH@ 23
---------------INS SimpleName@@n2 @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16225 @LENGTH@ 2
---------------INS InfixExpression@@2 * deltaExp @TO@ SimpleName@@MethodName:scalb:[n2, 2 * deltaExp] @AT@ 16229 @LENGTH@ 12
------------------INS NumberLiteral@@2 @TO@ InfixExpression@@2 * deltaExp @AT@ 16229 @LENGTH@ 1
------------------INS Operator@@* @TO@ InfixExpression@@2 * deltaExp @AT@ 16230 @LENGTH@ 1
------------------INS SimpleName@@deltaExp @TO@ InfixExpression@@2 * deltaExp @AT@ 16233 @LENGTH@ 8
, INS VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16250 @LENGTH@ 54
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16250 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16256 @LENGTH@ 6
---INS VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationStatement@@final double rho=FastMath.rint(256 * ratio) / 256; @AT@ 16263 @LENGTH@ 40
------INS SimpleName@@rho @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16263 @LENGTH@ 3
------INS InfixExpression@@FastMath.rint(256 * ratio) / 256 @TO@ VariableDeclarationFragment@@rho=FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 32
---------INS MethodInvocation@@FastMath.rint(256 * ratio) @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16271 @LENGTH@ 26
------------INS SimpleName@@Name:FastMath @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16271 @LENGTH@ 8
------------INS SimpleName@@MethodName:rint:[256 * ratio] @TO@ MethodInvocation@@FastMath.rint(256 * ratio) @AT@ 16280 @LENGTH@ 17
---------------INS InfixExpression@@256 * ratio @TO@ SimpleName@@MethodName:rint:[256 * ratio] @AT@ 16285 @LENGTH@ 11
------------------INS NumberLiteral@@256 @TO@ InfixExpression@@256 * ratio @AT@ 16285 @LENGTH@ 3
------------------INS Operator@@* @TO@ InfixExpression@@256 * ratio @AT@ 16288 @LENGTH@ 1
------------------INS SimpleName@@ratio @TO@ InfixExpression@@256 * ratio @AT@ 16291 @LENGTH@ 5
---------INS Operator@@/ @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16297 @LENGTH@ 1
---------INS NumberLiteral@@256 @TO@ InfixExpression@@FastMath.rint(256 * ratio) / 256 @AT@ 16300 @LENGTH@ 3
, INS VariableDeclarationStatement@@final double x3=x1 - rho * x2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16312 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16312 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16318 @LENGTH@ 6
---INS VariableDeclarationFragment@@x3=x1 - rho * x2 @TO@ VariableDeclarationStatement@@final double x3=x1 - rho * x2; @AT@ 16325 @LENGTH@ 18
------INS SimpleName@@x3 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16325 @LENGTH@ 2
------INS InfixExpression@@x1 - rho * x2 @TO@ VariableDeclarationFragment@@x3=x1 - rho * x2 @AT@ 16330 @LENGTH@ 13
---------MOV Operator@@- @TO@ InfixExpression@@x1 - rho * x2 @AT@ 15710 @LENGTH@ 1
---------INS SimpleName@@x1 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16330 @LENGTH@ 2
---------INS InfixExpression@@rho * x2 @TO@ InfixExpression@@x1 - rho * x2 @AT@ 16335 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * x2 @AT@ 16335 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * x2 @AT@ 16338 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@rho * x2 @AT@ 16341 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double y3=y1 - rho * y2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16351 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16351 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16357 @LENGTH@ 6
---INS VariableDeclarationFragment@@y3=y1 - rho * y2 @TO@ VariableDeclarationStatement@@final double y3=y1 - rho * y2; @AT@ 16364 @LENGTH@ 18
------INS SimpleName@@y3 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16364 @LENGTH@ 2
------INS InfixExpression@@y1 - rho * y2 @TO@ VariableDeclarationFragment@@y3=y1 - rho * y2 @AT@ 16369 @LENGTH@ 13
---------INS SimpleName@@y1 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16369 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16371 @LENGTH@ 1
---------INS InfixExpression@@rho * y2 @TO@ InfixExpression@@y1 - rho * y2 @AT@ 16374 @LENGTH@ 8
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * y2 @AT@ 16374 @LENGTH@ 3
------------INS Operator@@* @TO@ InfixExpression@@rho * y2 @AT@ 16377 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@rho * y2 @AT@ 16380 @LENGTH@ 2
, INS VariableDeclarationStatement@@final double z3=z1 - rho * z2; @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16390 @LENGTH@ 32
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16390 @LENGTH@ 5
---INS PrimitiveType@@double @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16396 @LENGTH@ 6
---INS VariableDeclarationFragment@@z3=z1 - rho * z2 @TO@ VariableDeclarationStatement@@final double z3=z1 - rho * z2; @AT@ 16403 @LENGTH@ 18
------INS SimpleName@@z3 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16403 @LENGTH@ 2
------INS InfixExpression@@z1 - rho * z2 @TO@ VariableDeclarationFragment@@z3=z1 - rho * z2 @AT@ 16408 @LENGTH@ 13
---------INS SimpleName@@z1 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16408 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16410 @LENGTH@ 1
---------INS InfixExpression@@rho * z2 @TO@ InfixExpression@@z1 - rho * z2 @AT@ 16413 @LENGTH@ 8
------------MOV Operator@@* @TO@ InfixExpression@@rho * z2 @AT@ 15717 @LENGTH@ 1
------------INS SimpleName@@rho @TO@ InfixExpression@@rho * z2 @AT@ 16413 @LENGTH@ 3
------------INS SimpleName@@z2 @TO@ InfixExpression@@rho * z2 @AT@ 16419 @LENGTH@ 2
, INS ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @TO@ MethodDeclaration@@public, static, @@Vector3D, MethodName:crossProduct, @@Argus:Vector3D+v1+Vector3D+v2+ @AT@ 16497 @LENGTH@ 77
---INS ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @TO@ ReturnStatement@@ClassInstanceCreation:new Vector3D(y3 * z2 - z3 * y2,z3 * x2 - x3 * z2,x3 * y2 - y3 * x2) @AT@ 16504 @LENGTH@ 69
------INS New@@new @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16504 @LENGTH@ 3
------INS SimpleType@@Vector3D @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16508 @LENGTH@ 8
------INS InfixExpression@@y3 * z2 - z3 * y2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16517 @LENGTH@ 17
---------INS InfixExpression@@y3 * z2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16517 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * z2 @AT@ 16517 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * z2 @AT@ 16519 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@y3 * z2 @AT@ 16522 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16524 @LENGTH@ 1
---------INS InfixExpression@@z3 * y2 @TO@ InfixExpression@@y3 * z2 - z3 * y2 @AT@ 16527 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * y2 @AT@ 16527 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * y2 @AT@ 16529 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@z3 * y2 @AT@ 16532 @LENGTH@ 2
------INS InfixExpression@@z3 * x2 - x3 * z2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16536 @LENGTH@ 17
---------INS InfixExpression@@z3 * x2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16536 @LENGTH@ 7
------------INS SimpleName@@z3 @TO@ InfixExpression@@z3 * x2 @AT@ 16536 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@z3 * x2 @AT@ 16538 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@z3 * x2 @AT@ 16541 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16543 @LENGTH@ 1
---------INS InfixExpression@@x3 * z2 @TO@ InfixExpression@@z3 * x2 - x3 * z2 @AT@ 16546 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * z2 @AT@ 16546 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * z2 @AT@ 16548 @LENGTH@ 1
------------INS SimpleName@@z2 @TO@ InfixExpression@@x3 * z2 @AT@ 16551 @LENGTH@ 2
------INS InfixExpression@@x3 * y2 - y3 * x2 @TO@ ClassInstanceCreation@@Vector3D[y3 * z2 - z3 * y2, z3 * x2 - x3 * z2, x3 * y2 - y3 * x2] @AT@ 16555 @LENGTH@ 17
---------INS InfixExpression@@x3 * y2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16555 @LENGTH@ 7
------------INS SimpleName@@x3 @TO@ InfixExpression@@x3 * y2 @AT@ 16555 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@x3 * y2 @AT@ 16557 @LENGTH@ 1
------------INS SimpleName@@y2 @TO@ InfixExpression@@x3 * y2 @AT@ 16560 @LENGTH@ 2
---------INS Operator@@- @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16562 @LENGTH@ 1
---------INS InfixExpression@@y3 * x2 @TO@ InfixExpression@@x3 * y2 - y3 * x2 @AT@ 16565 @LENGTH@ 7
------------INS SimpleName@@y3 @TO@ InfixExpression@@y3 * x2 @AT@ 16565 @LENGTH@ 2
------------INS Operator@@* @TO@ InfixExpression@@y3 * x2 @AT@ 16567 @LENGTH@ 1
------------INS SimpleName@@x2 @TO@ InfixExpression@@y3 * x2 @AT@ 16570 @LENGTH@ 2
]

CII:
OP1:(INS, ReturnStatement, null, OP2)
OP2:   (INS, ClassInstanceCreation, OP1, OP3 OP4 OP5 OP15 OP25)
OP3:      (INS, New, OP2, null)
OP4:      (INS, SimpleType, OP2, null)
OP5:      (INS, InfixExpression, OP2, OP6 OP10 OP11)
OP6:         (INS, InfixExpression, OP5, OP7 OP8 OP9)
OP7:            (INS, SimpleName, OP6, null)
OP8:            (INS, Operator, OP6, null)
OP9:            (INS, SimpleName, OP6, null)
OP10:         (INS, Operator, OP5, null)
OP11:         (INS, InfixExpression, OP5, OP12 OP13 OP14)
OP12:            (INS, SimpleName, OP11, null)
OP13:            (INS, Operator, OP11, null)
OP14:            (INS, SimpleName, OP11, null)
OP15:      (INS, InfixExpression, OP2, OP16 OP20 OP21)
OP16:         (INS, InfixExpression, OP15, OP17 OP18 OP19)
OP17:            (INS, SimpleName, OP16, null)
OP18:            (INS, Operator, OP16, null)
OP19:            (INS, SimpleName, OP16, null)
OP20:         (INS, Operator, OP15, null)
OP21:         (INS, InfixExpression, OP15, OP22 OP23 OP24)
OP22:            (INS, SimpleName, OP21, null)
OP23:            (INS, Operator, OP21, null)
OP24:            (INS, SimpleName, OP21, null)
OP25:      (INS, InfixExpression, OP2, OP26 OP30 OP31)
OP26:         (INS, InfixExpression, OP25, OP27 OP28 OP29)
OP27:            (INS, SimpleName, OP26, null)
OP28:            (INS, Operator, OP26, null)
OP29:            (INS, SimpleName, OP26, null)
OP30:         (INS, Operator, OP25, null)
OP31:         (INS, InfixExpression, OP25, OP32 OP33 OP34)
OP32:            (INS, SimpleName, OP31, null)
OP33:            (INS, Operator, OP31, null)
OP34:            (INS, SimpleName, OP31, null)



