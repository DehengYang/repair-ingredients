
diff -Naur ../d4j-repo/Math/Math_99/src/java/org/apache/commons/math/util/MathUtils.java ../d4j-repo/fixed_bugs_dir/Math/Math_99/src/java/org/apache/commons/math/util/MathUtils.java
--- ../d4j-repo/Math/Math_99/src/java/org/apache/commons/math/util/MathUtils.java	2021-01-04 23:07:57.612111250 -0800
+++ ../d4j-repo/fixed_bugs_dir/Math/Math_99/src/java/org/apache/commons/math/util/MathUtils.java	2021-01-04 23:08:01.192245368 -0800
@@ -540,6 +540,11 @@
         int u = p;
         int v = q;
         if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw MathRuntimeException.createArithmeticException(
+                        "overflow: gcd({0}, {1}) is 2^31",
+                        new Object[] { p, q });
+            }
             return (Math.abs(u) + Math.abs(v));
         }
         // keep u and v negative, as negative integers range down to
@@ -711,6 +716,9 @@
             return 0;
         }
         int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));
+        if (lcm == Integer.MIN_VALUE){
+            throw new ArithmeticException("overflow: lcm is 2^31");
+        }
         return lcm;
     }
 