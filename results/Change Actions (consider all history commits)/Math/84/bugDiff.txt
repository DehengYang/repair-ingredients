
diff -Naur ../d4j-repo/Math/Math_84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java ../d4j-repo/fixed_bugs_dir/Math/Math_84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
--- ../d4j-repo/Math/Math_84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	2021-01-04 23:06:10.924114396 -0800
+++ ../d4j-repo/fixed_bugs_dir/Math/Math_84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	2021-01-04 23:06:14.536249722 -0800
@@ -61,6 +61,7 @@
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 