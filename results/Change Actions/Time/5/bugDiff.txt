
diff -Naur /home/apr/ALL_APR_TOOLS/d4j-repo/Time/Time_5/src/main/java/org/joda/time/Period.java /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Time/Time_5/src/main/java/org/joda/time/Period.java
--- /home/apr/ALL_APR_TOOLS/d4j-repo/Time/Time_5/src/main/java/org/joda/time/Period.java	2020-01-05 22:47:16.008547339 -0800
+++ /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Time/Time_5/src/main/java/org/joda/time/Period.java	2020-01-05 22:47:17.348547334 -0800
@@ -1625,13 +1625,19 @@
         int years = getYears();
         int months = getMonths();
         if (years != 0 || months != 0) {
-            years = FieldUtils.safeAdd(years, months / 12);
-            months = months % 12;
-            if (years != 0) {
-                result = result.withYears(years);
+            long totalMonths = years * 12L + months;
+            if (type.isSupported(DurationFieldType.YEARS_TYPE)) {
+                int normalizedYears = FieldUtils.safeToInt(totalMonths / 12);
+                result = result.withYears(normalizedYears);
+                totalMonths = totalMonths - (normalizedYears * 12);
             }
-            if (months != 0) {
-                result = result.withMonths(months);
+            if (type.isSupported(DurationFieldType.MONTHS_TYPE)) {
+                int normalizedMonths = FieldUtils.safeToInt(totalMonths);
+                result = result.withMonths(normalizedMonths);
+                totalMonths = totalMonths - normalizedMonths;
+            }
+            if (totalMonths != 0) {
+                throw new UnsupportedOperationException("Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: " + toString());
             }
         }
         return result;