
diff -Naur /home/apr/ALL_APR_TOOLS/d4j-repo/Math/Math_97/src/java/org/apache/commons/math/analysis/BrentSolver.java /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Math/Math_97/src/java/org/apache/commons/math/analysis/BrentSolver.java
--- /home/apr/ALL_APR_TOOLS/d4j-repo/Math/Math_97/src/java/org/apache/commons/math/analysis/BrentSolver.java	2020-01-05 06:40:59.725511015 -0800
+++ /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Math/Math_97/src/java/org/apache/commons/math/analysis/BrentSolver.java	2020-01-05 06:41:02.133490903 -0800
@@ -135,17 +135,31 @@
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (sign > 0) {
             // check if either value is close to a zero
+            if (Math.abs(yMin) <= functionValueAccuracy) {
+                setResult(min, 0);
+                ret = min;
+            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                setResult(max, 0);
+                ret = max;
+            } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
-        } else {
+            }
+        } else if (sign < 0){
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);
+        } else {
             // either min or max is a root
+            if (yMin == 0.0) {
+                ret = min;
+            } else {
+                ret = max;
+            }
         }
 
         return ret;