
diff -Naur /home/apr/ALL_APR_TOOLS/d4j-repo/Closure/Closure_30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Closure/Closure_30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
--- /home/apr/ALL_APR_TOOLS/d4j-repo/Closure/Closure_30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2020-01-05 05:16:22.675915054 -0800
+++ /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Closure/Closure_30/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java	2020-01-05 05:16:24.407900588 -0800
@@ -154,7 +154,7 @@
 
   @Override
   public void process(Node externs, Node root) {
-    (new NodeTraversal(compiler, this)).traverse(root);
+    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);
   }
 
   @Override
diff -Naur /home/apr/ALL_APR_TOOLS/d4j-repo/Closure/Closure_30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Closure/Closure_30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java
--- /home/apr/ALL_APR_TOOLS/d4j-repo/Closure/Closure_30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2020-01-05 05:16:22.675915054 -0800
+++ /home/apr/ALL_APR_TOOLS/d4j-repo/fixed_bugs_dir/Closure/Closure_30/src/com/google/javascript/jscomp/MustBeReachingVariableDef.java	2020-01-05 05:16:24.407900588 -0800
@@ -68,6 +68,7 @@
   private static class Definition {
     final Node node;
     final Set<Var> depends = Sets.newHashSet();
+    private boolean unknownDependencies = false;
 
     Definition(Node node) {
       this.node = node;
@@ -393,9 +394,13 @@
         new AbstractCfgNodeTraversalCallback() {
       @Override
       public void visit(NodeTraversal t, Node n, Node parent) {
-        if (n.isName() && jsScope.isDeclared(n.getString(), true)) {
+        if (n.isName()) {
           Var dep = jsScope.getVar(n.getString());
+          if (dep == null) {
+            def.unknownDependencies = true;
+          } else {
             def.depends.add(dep);
+          }
         }
       }
     });
@@ -427,6 +432,9 @@
     GraphNode<Node, Branch> n = getCfg().getNode(useNode);
     FlowState<MustDef> state = n.getAnnotation();
     Definition def = state.getIn().reachingDef.get(jsScope.getVar(name));
+    if (def.unknownDependencies) {
+      return true;
+    }
 
     for (Var s : def.depends) {
       if (s.scope != jsScope) {